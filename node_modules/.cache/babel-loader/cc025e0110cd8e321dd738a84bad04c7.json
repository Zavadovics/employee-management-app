{"ast":null,"code":"var _jsxFileName = \"/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/pages/Employees/Employees.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport InputFieldSet from '../../common/InputFieldSet/InputFieldSet';\nimport { isFieldEmpty, isIdFormatValid } from '../../../utils/validators';\nimport { isFormValid, handleInputChange, handleInputBlur } from '../../../utils/form-validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Employees = ({\n  employees\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    employeeId: ''\n  });\n  console.log(formData.employeeId);\n  const [alert, setAlert] = useState(null);\n  const [formWasValidated, setFormWasValidated] = useState(false);\n  const references = {\n    employee: useRef()\n  };\n  const [formErrors, setFormErrors] = useState({\n    employee: ''\n  });\n  const messageTypes = Object.freeze({\n    success: `Az adatok sikeresen mentésre kerültek`,\n    fail: `Az adatok mentése sikertelen`\n  });\n  const formErrorTypes = Object.freeze({\n    required: `A mező kitöltése kötelező`\n  });\n  const validators = {\n    employee: {\n      required: isFieldEmpty\n    }\n  };\n\n  function handleSubmit(id) {\n    history.push(`/attraction/edit/${id}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-sm mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dolgoz\\xF3k\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      exact: true,\n      to: \"/employees/new\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-dark mt-5\",\n        children: \"L\\xE9trehoz\\xE1s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: handleSubmit // className={`needs-validation ${formWasValidated && 'was-validated'}`}\n      ,\n      className: `needs-validation ${formWasValidated ? 'was-validated' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(InputFieldSet, {\n        name: \"employee\",\n        value: formData.employee,\n        type: \"select\",\n        employeeOptions: employees,\n        onChange: e => {\n          handleInputChange(e, formData, setFormData);\n        },\n        onBlur: e => {\n          handleInputBlur(e, formData, setFormErrors, validators, references, formErrorTypes);\n        },\n        reference: references.employee,\n        error: formErrors.employee,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-l mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/employees/edit/${formData.employeeId}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-warning mt-5\",\n            children: \"M\\xF3dos\\xEDt\\xE1s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger mt-5\",\n          children: \"T\\xF6rl\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Employees, \"HXeaST8p/v/NLY5nOzTx8uv6cvY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Employees;\nexport default Employees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"sources":["/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/pages/Employees/Employees.js"],"names":["React","useState","useRef","useEffect","NavLink","useHistory","InputFieldSet","isFieldEmpty","isIdFormatValid","isFormValid","handleInputChange","handleInputBlur","Employees","employees","history","formData","setFormData","employeeId","console","log","alert","setAlert","formWasValidated","setFormWasValidated","references","employee","formErrors","setFormErrors","messageTypes","Object","freeze","success","fail","formErrorTypes","required","validators","handleSubmit","id","push","e"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport InputFieldSet from '../../common/InputFieldSet/InputFieldSet';\nimport { isFieldEmpty, isIdFormatValid } from '../../../utils/validators';\nimport {\n  isFormValid,\n  handleInputChange,\n  handleInputBlur,\n} from '../../../utils/form-validation';\n\nconst Employees = ({ employees }) => {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    employeeId: '',\n  });\n  console.log(formData.employeeId);\n\n  const [alert, setAlert] = useState(null);\n  const [formWasValidated, setFormWasValidated] = useState(false);\n\n  const references = {\n    employee: useRef(),\n  };\n\n  const [formErrors, setFormErrors] = useState({\n    employee: '',\n  });\n\n  const messageTypes = Object.freeze({\n    success: `Az adatok sikeresen mentésre kerültek`,\n    fail: `Az adatok mentése sikertelen`,\n  });\n\n  const formErrorTypes = Object.freeze({\n    required: `A mező kitöltése kötelező`,\n  });\n\n  const validators = {\n    employee: {\n      required: isFieldEmpty,\n    },\n  };\n\n  function handleSubmit(id) {\n    history.push(`/attraction/edit/${id}`);\n  }\n\n  return (\n    <div className='container-sm mt-5'>\n      <h1>Dolgozók</h1>\n      <NavLink exact to='/employees/new'>\n        <button type='button' className='btn btn-dark mt-5'>\n          Létrehozás\n        </button>{' '}\n      </NavLink>\n      <form\n        noValidate\n        onSubmit={handleSubmit}\n        // className={`needs-validation ${formWasValidated && 'was-validated'}`}\n        className={`needs-validation ${\n          formWasValidated ? 'was-validated' : ''\n        }`}\n      >\n        <InputFieldSet\n          name='employee'\n          value={formData.employee}\n          type='select'\n          employeeOptions={employees}\n          onChange={e => {\n            handleInputChange(e, formData, setFormData);\n          }}\n          onBlur={e => {\n            handleInputBlur(\n              e,\n              formData,\n              setFormErrors,\n              validators,\n              references,\n              formErrorTypes\n            );\n          }}\n          reference={references.employee}\n          error={formErrors.employee}\n          required\n        />\n\n        <div className='container-l mt-5'>\n          <NavLink to={`/employees/edit/${formData.employeeId}`}>\n            <button type='button' className='btn btn-warning mt-5'>\n              Módosítás\n            </button>\n          </NavLink>\n          <button type='button' className='btn btn-danger mt-5'>\n            Törlés\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Employees;\n"]},"metadata":{},"sourceType":"module"}