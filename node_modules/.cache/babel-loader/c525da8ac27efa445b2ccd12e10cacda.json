{"ast":null,"code":"export const isFieldEmpty = value => {\n  return value !== '';\n};\nconst regex = /[A-Za-z]{2}[0-9]{4}/;\nexport const isIdFormatValid = value => {\n  return regex.test(value);\n};\nexport const isIdLengthValid = value => {\n  return value.length === 6;\n};\nexport const idExists = value => {\n  const employees = JSON.parse(localStorage.getItem('storedEmployees'));\n  const filteredEmployees = employees.filter(item => item.employeeId === value).length === 0;\n  const departments = JSON.parse(localStorage.getItem('storedDepartments'));\n  const filteredDepartments = departments.filter(item => item.departmentId === value).length === 0; // const departments = localStorage.getItem('storedDepartments');\n\n  return filteredEmployees && filteredDepartments;\n};\nexport const isValueNegative = value => {\n  return value > 0;\n};\nexport const isDateInFuture = value => {\n  const futureDate = new Date(value);\n  const actualDate = new Date();\n  return futureDate <= actualDate;\n};","map":{"version":3,"sources":["/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/utils/validators.js"],"names":["isFieldEmpty","value","regex","isIdFormatValid","test","isIdLengthValid","length","idExists","employees","JSON","parse","localStorage","getItem","filteredEmployees","filter","item","employeeId","departments","filteredDepartments","departmentId","isValueNegative","isDateInFuture","futureDate","Date","actualDate"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAGC,KAAK,IAAI;AACnC,SAAOA,KAAK,KAAK,EAAjB;AACD,CAFM;AAIP,MAAMC,KAAK,GAAG,qBAAd;AAEA,OAAO,MAAMC,eAAe,GAAGF,KAAK,IAAI;AACtC,SAAOC,KAAK,CAACE,IAAN,CAAWH,KAAX,CAAP;AACD,CAFM;AAIP,OAAO,MAAMI,eAAe,GAAGJ,KAAK,IAAI;AACtC,SAAOA,KAAK,CAACK,MAAN,KAAiB,CAAxB;AACD,CAFM;AAIP,OAAO,MAAMC,QAAQ,GAAGN,KAAK,IAAI;AAC/B,QAAMO,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAlB;AACA,QAAMC,iBAAiB,GACrBL,SAAS,CAACM,MAAV,CAAiBC,IAAI,IAAIA,IAAI,CAACC,UAAL,KAAoBf,KAA7C,EAAoDK,MAApD,KAA+D,CADjE;AAEA,QAAMW,WAAW,GAAGR,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAX,CAApB;AACA,QAAMM,mBAAmB,GACvBD,WAAW,CAACH,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACI,YAAL,KAAsBlB,KAAjD,EAAwDK,MAAxD,KAAmE,CADrE,CAL+B,CAO/B;;AACA,SAAOO,iBAAiB,IAAIK,mBAA5B;AACD,CATM;AAWP,OAAO,MAAME,eAAe,GAAGnB,KAAK,IAAI;AACtC,SAAOA,KAAK,GAAG,CAAf;AACD,CAFM;AAIP,OAAO,MAAMoB,cAAc,GAAGpB,KAAK,IAAI;AACrC,QAAMqB,UAAU,GAAG,IAAIC,IAAJ,CAAStB,KAAT,CAAnB;AACA,QAAMuB,UAAU,GAAG,IAAID,IAAJ,EAAnB;AACA,SAAOD,UAAU,IAAIE,UAArB;AACD,CAJM","sourcesContent":["export const isFieldEmpty = value => {\n  return value !== '';\n};\n\nconst regex = /[A-Za-z]{2}[0-9]{4}/;\n\nexport const isIdFormatValid = value => {\n  return regex.test(value);\n};\n\nexport const isIdLengthValid = value => {\n  return value.length === 6;\n};\n\nexport const idExists = value => {\n  const employees = JSON.parse(localStorage.getItem('storedEmployees'));\n  const filteredEmployees =\n    employees.filter(item => item.employeeId === value).length === 0;\n  const departments = JSON.parse(localStorage.getItem('storedDepartments'));\n  const filteredDepartments =\n    departments.filter(item => item.departmentId === value).length === 0;\n  // const departments = localStorage.getItem('storedDepartments');\n  return filteredEmployees && filteredDepartments;\n};\n\nexport const isValueNegative = value => {\n  return value > 0;\n};\n\nexport const isDateInFuture = value => {\n  const futureDate = new Date(value);\n  const actualDate = new Date();\n  return futureDate <= actualDate;\n};\n"]},"metadata":{},"sourceType":"module"}