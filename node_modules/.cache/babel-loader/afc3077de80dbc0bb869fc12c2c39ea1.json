{"ast":null,"code":"var _jsxFileName = \"/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport Navbar from './components/common/Navbar/Navbar';\nimport Departments from './components/pages/Departments/Departments';\nimport Employees from './components/pages/Employees/Employees';\nimport Datalist from './components/pages/Datalist/Datalist';\nimport NewDepartment from './components/pages/NewDepartment/NewDepartment';\nimport NewEmployee from './components/pages/NewEmployee/NewEmployee';\nimport EditEmployee from './components/pages/NewEmployee/NewEmployee';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [departments, setDepartments] = useState(['pénzügyi osztály', 'személyügy', 'igazgatóság', 'szakszervezet']);\n  const [employees, setEmployees] = useState([]); // only run once the first time this component is rendered\n\n  useEffect(() => {\n    if (localStorage.getItem('storedEmployees')) {\n      setEmployees(JSON.parse(localStorage.getItem('storedEmployees')));\n    }\n  }, []); // run every time our employees state changes\n\n  useEffect(() => {\n    localStorage.setItem('storedEmployees', JSON.stringify(employees));\n  }, [employees]);\n  console.log(employees);\n  const [namesOfEmployees, setNamesOfEmployees] = useState('');\n  useEffect(() => {\n    const fullNames = [];\n\n    for (let i = 0; i < employees.length; i++) {\n      fullNames.push(employees[i].familyName + ' ' + employees[i].givenName);\n      setNamesOfEmployees(fullNames);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/departments\",\n        element: /*#__PURE__*/_jsxDEV(Departments, {\n          departments: departments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/departments/new\",\n        element: /*#__PURE__*/_jsxDEV(NewDepartment, {\n          departments: departments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/employees\",\n        element: /*#__PURE__*/_jsxDEV(Employees, {\n          employees: employees,\n          setEmployees: setEmployees,\n          test: test,\n          setTest: setTest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/employees/new\",\n        element: /*#__PURE__*/_jsxDEV(NewEmployee, {\n          departments: departments,\n          employees: employees,\n          setEmployees: setEmployees\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/employees/edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEmployee, {\n          departments: departments,\n          employees: employees,\n          setEmployees: setEmployees\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/datalist\",\n        element: /*#__PURE__*/_jsxDEV(Datalist, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"m8d2A+o3ok6AQkg6nnOnkipF9DQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Link","Navbar","Departments","Employees","Datalist","NewDepartment","NewEmployee","EditEmployee","App","departments","setDepartments","employees","setEmployees","localStorage","getItem","JSON","parse","setItem","stringify","console","log","namesOfEmployees","setNamesOfEmployees","fullNames","i","length","push","familyName","givenName","test","setTest"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport Navbar from './components/common/Navbar/Navbar';\nimport Departments from './components/pages/Departments/Departments';\nimport Employees from './components/pages/Employees/Employees';\nimport Datalist from './components/pages/Datalist/Datalist';\nimport NewDepartment from './components/pages/NewDepartment/NewDepartment';\nimport NewEmployee from './components/pages/NewEmployee/NewEmployee';\nimport EditEmployee from './components/pages/NewEmployee/NewEmployee';\nimport './App.scss';\n\nconst App = () => {\n  const [departments, setDepartments] = useState([\n    'pénzügyi osztály',\n    'személyügy',\n    'igazgatóság',\n    'szakszervezet',\n  ]);\n\n  const [employees, setEmployees] = useState([]);\n\n  // only run once the first time this component is rendered\n  useEffect(() => {\n    if (localStorage.getItem('storedEmployees')) {\n      setEmployees(JSON.parse(localStorage.getItem('storedEmployees')));\n    }\n  }, []);\n\n  // run every time our employees state changes\n  useEffect(() => {\n    localStorage.setItem('storedEmployees', JSON.stringify(employees));\n  }, [employees]);\n\n  console.log(employees);\n\n  const [namesOfEmployees, setNamesOfEmployees] = useState('');\n\n  useEffect(() => {\n    const fullNames = [];\n    for (let i = 0; i < employees.length; i++) {\n      fullNames.push(employees[i].familyName + ' ' + employees[i].givenName);\n      setNamesOfEmployees(fullNames);\n    }\n  }, []);\n\n  return (\n    <div className='App'>\n      <Navbar />\n      <Routes>\n        <Route\n          path='/departments'\n          element={<Departments departments={departments} />}\n        />\n        <Route\n          path='/departments/new'\n          element={<NewDepartment departments={departments} />}\n        />\n        <Route\n          path='/employees'\n          element={\n            <Employees\n              employees={employees}\n              setEmployees={setEmployees}\n              test={test}\n              setTest={setTest}\n            />\n          }\n        />\n        <Route\n          path='/employees/new'\n          element={\n            <NewEmployee\n              departments={departments}\n              employees={employees}\n              setEmployees={setEmployees}\n            />\n          }\n        />\n        <Route\n          path='/employees/edit'\n          element={\n            <EditEmployee\n              departments={departments}\n              employees={employees}\n              setEmployees={setEmployees}\n            />\n          }\n        />\n        <Route path='/datalist' element={<Datalist />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}