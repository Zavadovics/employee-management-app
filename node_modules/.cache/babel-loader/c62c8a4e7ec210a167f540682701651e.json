{"ast":null,"code":"var _jsxFileName = \"/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/common/EmployeeForm/EmployeeForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport InputFieldSet from '../InputFieldSet/InputFieldSet';\nimport { isValueNegative, isFieldEmpty, isIdFormatValid, isDateInFuture, idExists } from '../../../utils/validators';\nimport { isFormValid, handleInputChange, handleInputBlur } from '../../../utils/form-validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmployeeForm = ({\n  type,\n  id,\n  employee,\n  setEmployee,\n  employees,\n  setEmployees,\n  departments\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState(type === 'edit' ? {\n    employeeId: employee.employeeId,\n    familyName: employee.familyName,\n    givenName: employee.givenName,\n    birthdate: employee.birthdate,\n    daysOffLimit: employee.daysOffLimit,\n    daysOff: parseInt(employee.daysOffLimit) - parseInt(employee.daysOffRemained),\n    department: employee.department\n  } : {\n    employeeId: '',\n    familyName: '',\n    givenName: '',\n    birthdate: '',\n    daysOffLimit: '',\n    daysOffRemained: '',\n    department: ''\n  });\n  const [alert, setAlert] = useState(null);\n  const [formWasValidated, setFormWasValidated] = useState(false);\n  const references = {\n    employeeId: useRef(),\n    familyName: useRef(),\n    givenName: useRef(),\n    birthdate: useRef(),\n    daysOffLimit: useRef(),\n    daysOffRemained: useRef(),\n    department: useRef()\n  };\n  const formErrorTypes = Object.freeze({\n    required: `A mező kitöltése kötelező`,\n    positive: `Kérlek pozitív számot adj meg`,\n    employeeIdFormat: `Az azonosító nem megfelelő formátumú (2 kis - vagy nagybetű és 4 szám)`,\n    futureDate: `Nem hiszem el hogy a jövőben születtél`,\n    idNotUnique: `Ez az azonosító már létezik`\n  });\n  const [formErrors, setFormErrors] = useState({\n    employeeId: '',\n    familyName: '',\n    givenName: '',\n    birthdate: '',\n    daysOffLimit: '',\n    daysOffRemained: '',\n    department: ''\n  });\n  const messageTypes = Object.freeze({\n    success: `Az adatok sikeresen mentésre kerültek`,\n    fail: `Az adatok mentése sikertelen`\n  });\n  const validators = {\n    employeeId: {\n      required: isFieldEmpty,\n      employeeIdFormat: isIdFormatValid,\n      idNotUnique: idExists\n    },\n    familyName: {\n      required: isFieldEmpty\n    },\n    givenName: {\n      required: isFieldEmpty\n    },\n    birthdate: {\n      required: isFieldEmpty,\n      futureDate: isDateInFuture\n    },\n    daysOffLimit: {\n      required: isFieldEmpty,\n      positive: isValueNegative\n    },\n    daysOffRemained: {\n      required: isFieldEmpty,\n      positive: isValueNegative\n    },\n    department: {\n      required: isFieldEmpty\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setAlert('');\n    setFormErrors({\n      employeeId: '',\n      familyName: '',\n      givenName: '',\n      birthdate: '',\n      daysOffLimit: '',\n      daysOffRemained: '',\n      department: ''\n    });\n    setFormWasValidated(false);\n    const isValid = isFormValid(formData, setFormErrors, validators, references, formErrorTypes);\n\n    if (isValid) {\n      if (type === 'new') {\n        setEmployees(prev => prev.concat({\n          employeeId: formData.employeeId,\n          familyName: formData.familyName,\n          givenName: formData.givenName,\n          birthdate: formData.birthdate,\n          daysOffLimit: formData.daysOffLimit,\n          daysOff: parseInt(formData.daysOffLimit) - parseInt(formData.daysOffRemained),\n          department: formData.department\n        }));\n        setFormData({\n          employeeId: '',\n          familyName: '',\n          givenName: '',\n          birthdate: '',\n          daysOffLimit: '',\n          daysOffRemained: '',\n          department: ''\n        });\n        setAlert({\n          alertType: 'success',\n          message: messageTypes.success\n        });\n      }\n\n      if (type === 'edit') {\n        const filtered = employees.filter(value => value.employeeId !== id);\n        setEmployees(filtered);\n        setEmployees(prev => [...prev, formData]);\n        setEmployee('');\n        setAlert({\n          alertType: 'success',\n          message: messageTypes.success\n        });\n      }\n    } else {\n      setFormWasValidated(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-sm mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/employees\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-dark mb-5\",\n        children: \"Vissza\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      className: `needs-validation ${formWasValidated ? 'was-validated' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(InputFieldSet, {\n        name: \"employeeId\",\n        value: formData.employeeId,\n        labelText: \"Azonos\\xEDt\\xF3 *\",\n        type: \"text\",\n        placeholder: \"pl: ab1234\",\n        onChange: e => {\n          handleInputChange(e, formData, setFormData);\n        },\n        onBlur: e => {\n          handleInputBlur(e, formData, setFormErrors, validators, references, formErrorTypes);\n        },\n        reference: references.employeeId,\n        error: formErrors.employeeId,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputFieldSet, {\n        name: \"familyName\",\n        value: formData.familyName,\n        labelText: \"Csal\\xE1di n\\xE9v *\",\n        type: \"text\",\n        onChange: e => {\n          handleInputChange(e, formData, setFormData);\n        },\n        onBlur: e => {\n          handleInputBlur(e, formData, setFormErrors, validators, references, formErrorTypes);\n        },\n        reference: references.familyName,\n        error: formErrors.familyName,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputFieldSet, {\n        name: \"givenName\",\n        value: formData.givenName,\n        labelText: \"Ut\\xF3n\\xE9v *\",\n        type: \"text\",\n        onChange: e => {\n          handleInputChange(e, formData, setFormData);\n        },\n        onBlur: e => {\n          handleInputBlur(e, formData, setFormErrors, validators, references, formErrorTypes);\n        },\n        reference: references.givenName,\n        error: formErrors.givenName,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputFieldSet, {\n        name: \"birthdate\",\n        value: formData.birthdate,\n        labelText: \"Sz\\xFClet\\xE9si d\\xE1tum *\",\n        type: \"date\",\n        onChange: e => {\n          handleInputChange(e, formData, setFormData);\n        },\n        onBlur: e => {\n          handleInputBlur(e, formData, setFormErrors, validators, references, formErrorTypes);\n        },\n        reference: references.birthdate,\n        error: formErrors.birthdate,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputFieldSet, {\n        name: \"daysOffLimit\",\n        value: formData.daysOffLimit,\n        labelText: \"\\xD6sszes szabadnap *\",\n        type: \"number\",\n        onChange: e => {\n          handleInputChange(e, formData, setFormData);\n        },\n        onBlur: e => {\n          handleInputBlur(e, formData, setFormErrors, validators, references, formErrorTypes);\n        },\n        reference: references.daysOffLimit,\n        error: formErrors.daysOffLimit,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputFieldSet, {\n        name: \"daysOffRemained\",\n        value: formData.daysOffRemained,\n        labelText: \"Felhaszn\\xE1lhat\\xF3 szabadnap *\",\n        type: \"number\",\n        onChange: e => {\n          handleInputChange(e, formData, setFormData);\n        },\n        onBlur: e => {\n          handleInputBlur(e, formData, setFormErrors, validators, references, formErrorTypes);\n        },\n        reference: references.daysOffRemained,\n        error: formErrors.daysOffRemained,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputFieldSet, {\n        name: \"department\",\n        value: formData.department,\n        labelText: \"Foglalkoztat\\xF3 *\",\n        type: \"select\",\n        options: departments.map(dep => dep.departmentName),\n        onChange: e => {\n          handleInputChange(e, formData, setFormData);\n        },\n        onBlur: e => {\n          handleInputBlur(e, formData, setFormErrors, validators, references, formErrorTypes);\n        },\n        reference: references.department,\n        error: formErrors.department,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-cont\",\n        children: alert && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `alert alert-${alert.alertType}`,\n          children: alert.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-l\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-warning mt-5\",\n          children: \"Ment\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/employees\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-dark mt-5\",\n            children: \"M\\xE9gsem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmployeeForm, \"jYocTPkJZjNbyO0Sa6TEOGKBc2c=\");\n\n_c = EmployeeForm;\nexport default EmployeeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeForm\");","map":{"version":3,"sources":["/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/common/EmployeeForm/EmployeeForm.js"],"names":["React","useState","useRef","NavLink","InputFieldSet","isValueNegative","isFieldEmpty","isIdFormatValid","isDateInFuture","idExists","isFormValid","handleInputChange","handleInputBlur","EmployeeForm","type","id","employee","setEmployee","employees","setEmployees","departments","formData","setFormData","employeeId","familyName","givenName","birthdate","daysOffLimit","daysOff","parseInt","daysOffRemained","department","alert","setAlert","formWasValidated","setFormWasValidated","references","formErrorTypes","Object","freeze","required","positive","employeeIdFormat","futureDate","idNotUnique","formErrors","setFormErrors","messageTypes","success","fail","validators","handleSubmit","e","preventDefault","isValid","prev","concat","alertType","message","filtered","filter","value","map","dep","departmentName"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport InputFieldSet from '../InputFieldSet/InputFieldSet';\nimport {\n  isValueNegative,\n  isFieldEmpty,\n  isIdFormatValid,\n  isDateInFuture,\n  idExists,\n} from '../../../utils/validators';\nimport {\n  isFormValid,\n  handleInputChange,\n  handleInputBlur,\n} from '../../../utils/form-validation';\n\nconst EmployeeForm = ({\n  type,\n  id,\n  employee,\n  setEmployee,\n  employees,\n  setEmployees,\n  departments,\n}) => {\n  const [formData, setFormData] = useState(\n    type === 'edit'\n      ? {\n          employeeId: employee.employeeId,\n          familyName: employee.familyName,\n          givenName: employee.givenName,\n          birthdate: employee.birthdate,\n          daysOffLimit: employee.daysOffLimit,\n          daysOff:\n            parseInt(employee.daysOffLimit) -\n            parseInt(employee.daysOffRemained),\n          department: employee.department,\n        }\n      : {\n          employeeId: '',\n          familyName: '',\n          givenName: '',\n          birthdate: '',\n          daysOffLimit: '',\n          daysOffRemained: '',\n          department: '',\n        }\n  );\n  const [alert, setAlert] = useState(null);\n  const [formWasValidated, setFormWasValidated] = useState(false);\n\n  const references = {\n    employeeId: useRef(),\n    familyName: useRef(),\n    givenName: useRef(),\n    birthdate: useRef(),\n    daysOffLimit: useRef(),\n    daysOffRemained: useRef(),\n    department: useRef(),\n  };\n\n  const formErrorTypes = Object.freeze({\n    required: `A mező kitöltése kötelező`,\n    positive: `Kérlek pozitív számot adj meg`,\n    employeeIdFormat: `Az azonosító nem megfelelő formátumú (2 kis - vagy nagybetű és 4 szám)`,\n    futureDate: `Nem hiszem el hogy a jövőben születtél`,\n    idNotUnique: `Ez az azonosító már létezik`,\n  });\n\n  const [formErrors, setFormErrors] = useState({\n    employeeId: '',\n    familyName: '',\n    givenName: '',\n    birthdate: '',\n    daysOffLimit: '',\n    daysOffRemained: '',\n    department: '',\n  });\n\n  const messageTypes = Object.freeze({\n    success: `Az adatok sikeresen mentésre kerültek`,\n    fail: `Az adatok mentése sikertelen`,\n  });\n\n  const validators = {\n    employeeId: {\n      required: isFieldEmpty,\n      employeeIdFormat: isIdFormatValid,\n      idNotUnique: idExists,\n    },\n    familyName: {\n      required: isFieldEmpty,\n    },\n    givenName: {\n      required: isFieldEmpty,\n    },\n    birthdate: {\n      required: isFieldEmpty,\n      futureDate: isDateInFuture,\n    },\n    daysOffLimit: {\n      required: isFieldEmpty,\n      positive: isValueNegative,\n    },\n    daysOffRemained: {\n      required: isFieldEmpty,\n      positive: isValueNegative,\n    },\n    department: {\n      required: isFieldEmpty,\n    },\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setAlert('');\n    setFormErrors({\n      employeeId: '',\n      familyName: '',\n      givenName: '',\n      birthdate: '',\n      daysOffLimit: '',\n      daysOffRemained: '',\n      department: '',\n    });\n    setFormWasValidated(false);\n    const isValid = isFormValid(\n      formData,\n      setFormErrors,\n      validators,\n      references,\n      formErrorTypes\n    );\n\n    if (isValid) {\n      if (type === 'new') {\n        setEmployees(prev =>\n          prev.concat({\n            employeeId: formData.employeeId,\n            familyName: formData.familyName,\n            givenName: formData.givenName,\n            birthdate: formData.birthdate,\n            daysOffLimit: formData.daysOffLimit,\n            daysOff:\n              parseInt(formData.daysOffLimit) -\n              parseInt(formData.daysOffRemained),\n            department: formData.department,\n          })\n        );\n        setFormData({\n          employeeId: '',\n          familyName: '',\n          givenName: '',\n          birthdate: '',\n          daysOffLimit: '',\n          daysOffRemained: '',\n          department: '',\n        });\n        setAlert({ alertType: 'success', message: messageTypes.success });\n      }\n      if (type === 'edit') {\n        const filtered = employees.filter(value => value.employeeId !== id);\n\n        setEmployees(filtered);\n        setEmployees(prev => [...prev, formData]);\n        setEmployee('');\n        setAlert({ alertType: 'success', message: messageTypes.success });\n      }\n    } else {\n      setFormWasValidated(true);\n    }\n  };\n  return (\n    <div className='container-sm mt-5'>\n      <NavLink to='/employees'>\n        <button type='button' className='btn btn-dark mb-5'>\n          Vissza\n        </button>\n      </NavLink>\n      <form\n        noValidate\n        onSubmit={handleSubmit}\n        className={`needs-validation ${\n          formWasValidated ? 'was-validated' : ''\n        }`}\n      >\n        <InputFieldSet\n          name='employeeId'\n          value={formData.employeeId}\n          labelText='Azonosító *'\n          type='text'\n          placeholder='pl: ab1234'\n          onChange={e => {\n            handleInputChange(e, formData, setFormData);\n          }}\n          onBlur={e => {\n            handleInputBlur(\n              e,\n              formData,\n              setFormErrors,\n              validators,\n              references,\n              formErrorTypes\n            );\n          }}\n          reference={references.employeeId}\n          error={formErrors.employeeId}\n          required\n        />\n        <InputFieldSet\n          name='familyName'\n          value={formData.familyName}\n          labelText='Családi név *'\n          type='text'\n          onChange={e => {\n            handleInputChange(e, formData, setFormData);\n          }}\n          onBlur={e => {\n            handleInputBlur(\n              e,\n              formData,\n              setFormErrors,\n              validators,\n              references,\n              formErrorTypes\n            );\n          }}\n          reference={references.familyName}\n          error={formErrors.familyName}\n          required\n        />\n        <InputFieldSet\n          name='givenName'\n          value={formData.givenName}\n          labelText='Utónév *'\n          type='text'\n          onChange={e => {\n            handleInputChange(e, formData, setFormData);\n          }}\n          onBlur={e => {\n            handleInputBlur(\n              e,\n              formData,\n              setFormErrors,\n              validators,\n              references,\n              formErrorTypes\n            );\n          }}\n          reference={references.givenName}\n          error={formErrors.givenName}\n          required\n        />\n        <InputFieldSet\n          name='birthdate'\n          value={formData.birthdate}\n          labelText='Születési dátum *'\n          type='date'\n          onChange={e => {\n            handleInputChange(e, formData, setFormData);\n          }}\n          onBlur={e => {\n            handleInputBlur(\n              e,\n              formData,\n              setFormErrors,\n              validators,\n              references,\n              formErrorTypes\n            );\n          }}\n          reference={references.birthdate}\n          error={formErrors.birthdate}\n          required\n        />\n        <InputFieldSet\n          name='daysOffLimit'\n          value={formData.daysOffLimit}\n          labelText='Összes szabadnap *'\n          type='number'\n          onChange={e => {\n            handleInputChange(e, formData, setFormData);\n          }}\n          onBlur={e => {\n            handleInputBlur(\n              e,\n              formData,\n              setFormErrors,\n              validators,\n              references,\n              formErrorTypes\n            );\n          }}\n          reference={references.daysOffLimit}\n          error={formErrors.daysOffLimit}\n          required\n        />\n        <InputFieldSet\n          name='daysOffRemained'\n          value={formData.daysOffRemained}\n          labelText='Felhasználható szabadnap *'\n          type='number'\n          onChange={e => {\n            handleInputChange(e, formData, setFormData);\n          }}\n          onBlur={e => {\n            handleInputBlur(\n              e,\n              formData,\n              setFormErrors,\n              validators,\n              references,\n              formErrorTypes\n            );\n          }}\n          reference={references.daysOffRemained}\n          error={formErrors.daysOffRemained}\n          required\n        />\n        <InputFieldSet\n          name='department'\n          value={formData.department}\n          labelText='Foglalkoztató *'\n          type='select'\n          options={departments.map(dep => dep.departmentName)}\n          onChange={e => {\n            handleInputChange(e, formData, setFormData);\n          }}\n          onBlur={e => {\n            handleInputBlur(\n              e,\n              formData,\n              setFormErrors,\n              validators,\n              references,\n              formErrorTypes\n            );\n          }}\n          reference={references.department}\n          error={formErrors.department}\n          required\n        />\n        <div className='alert-cont'>\n          {alert && (\n            <p className={`alert alert-${alert.alertType}`}>{alert.message}</p>\n          )}\n        </div>\n        <div className='container-l'>\n          <button type='submit' className='btn btn-warning mt-5'>\n            Mentés\n          </button>\n          <NavLink to='/employees'>\n            <button type='button' className='btn btn-dark mt-5'>\n              Mégsem\n            </button>\n          </NavLink>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default EmployeeForm;\n"]},"metadata":{},"sourceType":"module"}