{"ast":null,"code":"var _jsxFileName = \"/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/pages/Departments/Departments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport InputFieldSet from '../../common/InputFieldSet/InputFieldSet';\nimport { isFieldEmpty } from '../../../utils/validators';\nimport { isFormValid, handleInputChange, handleInputBlur } from '../../../utils/form-validation';\nimport { useNavigate } from 'react-router-dom';\nimport DeleteModal from '../../common/DeleteModal/DeleteModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Departments = ({\n  department,\n  setDepartment,\n  departments,\n  setDepartments\n}) => {\n  _s();\n\n  let navigate = useNavigate();\n  const deleteModalRef = useRef();\n  const state = {\n    button: 1\n  };\n  const [formData, setFormData] = useState({\n    departmentId: ''\n  });\n  const [alert, setAlert] = useState(null);\n  const [formWasValidated, setFormWasValidated] = useState(false);\n  const references = {\n    departmentId: useRef()\n  };\n  const [formErrors, setFormErrors] = useState({\n    departmentId: ''\n  });\n  const messageTypes = Object.freeze({\n    success: `Az adatok sikeresen mentésre kerültek`,\n    fail: `Az adatok mentése sikertelen`,\n    deleteSuccess: `Az adatok törlése sikeres`\n  });\n  const formErrorTypes = Object.freeze({\n    required: `A mező kitöltése kötelező`\n  });\n  const validators = {\n    departmentId: {\n      required: isFieldEmpty\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setAlert(null);\n    setFormErrors({\n      departmentId: ''\n    });\n    setFormWasValidated(false);\n    const isValid = isFormValid(formData, setFormErrors, validators, references, formErrorTypes);\n\n    if (isValid) {\n      const foundDepartment = departments.filter(department => department.departmentId === formData.departmentId)[0];\n      setDepartment(foundDepartment);\n\n      if (state.button === 1) {\n        navigate(`/departments/edit/${formData.departmentId}`);\n      }\n    } else {\n      console.log('no input');\n      setFormWasValidated(false);\n    }\n  };\n\n  const handleDeleteConfirm = () => {\n    const remainedDepartments = departments.filter(department => department.departmentId !== formData.departmentId);\n    setDepartments(remainedDepartments);\n    setAlert({\n      alertType: 'success',\n      message: messageTypes.deleteSuccess\n    });\n    setDepartment('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-sm mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Szervezeti egys\\xE9gek\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/departments/new\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-dark mt-5\",\n        children: \"L\\xE9trehoz\\xE1s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      className: `needs-validation ${formWasValidated ? 'was-validated' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(InputFieldSet, {\n        name: \"departmentId\",\n        value: formData.departmentId,\n        type: \"select\",\n        departmentOptions: departments,\n        onChange: e => {\n          handleInputChange(e, formData, setFormData);\n        },\n        onBlur: e => {\n          handleInputBlur(e, formData, setFormErrors, validators, references, formErrorTypes);\n        },\n        reference: references.departmentId,\n        error: formErrors.departmentId,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-cont\",\n        children: alert && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `alert alert-${alert.alertType}`,\n          children: alert.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-l mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => state.button = 1,\n          className: \"btn btn-warning mt-5\",\n          children: \"M\\xF3dos\\xEDt\\xE1s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), formData.departmentId === '' ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-danger mt-5\",\n          children: \"T\\xF6rl\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => state.button = 2,\n          className: \"btn btn-danger mt-5\",\n          \"data-bs-target\": \"#myModal\",\n          \"data-bs-toggle\": \"modal\",\n          \"data-id\": formData.departmentId,\n          children: \"T\\xF6rl\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteModal, {\n      handleDeleteConfirm: handleDeleteConfirm,\n      deleteModalRef: deleteModalRef,\n      type: \"deleteDepartment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Departments, \"6e3cKnb353WO21VuDuN9StpOBfY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Departments;\nexport default Departments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Departments\");","map":{"version":3,"sources":["/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/pages/Departments/Departments.js"],"names":["React","useState","useRef","NavLink","InputFieldSet","isFieldEmpty","isFormValid","handleInputChange","handleInputBlur","useNavigate","DeleteModal","Departments","department","setDepartment","departments","setDepartments","navigate","deleteModalRef","state","button","formData","setFormData","departmentId","alert","setAlert","formWasValidated","setFormWasValidated","references","formErrors","setFormErrors","messageTypes","Object","freeze","success","fail","deleteSuccess","formErrorTypes","required","validators","handleSubmit","e","preventDefault","isValid","foundDepartment","filter","console","log","handleDeleteConfirm","remainedDepartments","alertType","message"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport InputFieldSet from '../../common/InputFieldSet/InputFieldSet';\nimport { isFieldEmpty } from '../../../utils/validators';\nimport {\n  isFormValid,\n  handleInputChange,\n  handleInputBlur,\n} from '../../../utils/form-validation';\nimport { useNavigate } from 'react-router-dom';\nimport DeleteModal from '../../common/DeleteModal/DeleteModal';\n\nconst Departments = ({\n  department,\n  setDepartment,\n  departments,\n  setDepartments,\n}) => {\n  let navigate = useNavigate();\n  const deleteModalRef = useRef();\n  const state = {\n    button: 1,\n  };\n\n  const [formData, setFormData] = useState({\n    departmentId: '',\n  });\n\n  const [alert, setAlert] = useState(null);\n  const [formWasValidated, setFormWasValidated] = useState(false);\n\n  const references = {\n    departmentId: useRef(),\n  };\n\n  const [formErrors, setFormErrors] = useState({\n    departmentId: '',\n  });\n\n  const messageTypes = Object.freeze({\n    success: `Az adatok sikeresen mentésre kerültek`,\n    fail: `Az adatok mentése sikertelen`,\n    deleteSuccess: `Az adatok törlése sikeres`,\n  });\n\n  const formErrorTypes = Object.freeze({\n    required: `A mező kitöltése kötelező`,\n  });\n\n  const validators = {\n    departmentId: {\n      required: isFieldEmpty,\n    },\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setAlert(null);\n    setFormErrors({\n      departmentId: '',\n    });\n    setFormWasValidated(false);\n    const isValid = isFormValid(\n      formData,\n      setFormErrors,\n      validators,\n      references,\n      formErrorTypes\n    );\n    if (isValid) {\n      const foundDepartment = departments.filter(\n        department => department.departmentId === formData.departmentId\n      )[0];\n      setDepartment(foundDepartment);\n      if (state.button === 1) {\n        navigate(`/departments/edit/${formData.departmentId}`);\n      }\n    } else {\n      console.log('no input');\n      setFormWasValidated(false);\n    }\n  };\n\n  const handleDeleteConfirm = () => {\n    const remainedDepartments = departments.filter(\n      department => department.departmentId !== formData.departmentId\n    );\n    setDepartments(remainedDepartments);\n    setAlert({ alertType: 'success', message: messageTypes.deleteSuccess });\n    setDepartment('');\n  };\n\n  return (\n    <div className='container-sm mt-5'>\n      <h1>Szervezeti egységek</h1>\n      <NavLink to='/departments/new'>\n        <button type='button' className='btn btn-dark mt-5'>\n          Létrehozás\n        </button>{' '}\n      </NavLink>\n      <form\n        noValidate\n        onSubmit={handleSubmit}\n        className={`needs-validation ${\n          formWasValidated ? 'was-validated' : ''\n        }`}\n      >\n        <InputFieldSet\n          name='departmentId'\n          value={formData.departmentId}\n          type='select'\n          departmentOptions={departments}\n          onChange={e => {\n            handleInputChange(e, formData, setFormData);\n          }}\n          onBlur={e => {\n            handleInputBlur(\n              e,\n              formData,\n              setFormErrors,\n              validators,\n              references,\n              formErrorTypes\n            );\n          }}\n          reference={references.departmentId}\n          error={formErrors.departmentId}\n          required\n        />\n        <div className='alert-cont'>\n          {alert && (\n            <p className={`alert alert-${alert.alertType}`}>{alert.message}</p>\n          )}\n        </div>\n        <div className='container-l mt-5'>\n          <button\n            type='submit'\n            onClick={() => (state.button = 1)}\n            className='btn btn-warning mt-5'\n          >\n            Módosítás\n          </button>\n          {formData.departmentId === '' ? (\n            <button type='submit' className='btn btn-danger mt-5'>\n              Törlés\n            </button>\n          ) : (\n            <button\n              type='submit'\n              onClick={() => (state.button = 2)}\n              className='btn btn-danger mt-5'\n              data-bs-target='#myModal'\n              data-bs-toggle='modal'\n              data-id={formData.departmentId}\n            >\n              Törlés\n            </button>\n          )}\n        </div>\n      </form>\n      <DeleteModal\n        handleDeleteConfirm={handleDeleteConfirm}\n        deleteModalRef={deleteModalRef}\n        type='deleteDepartment'\n      />\n    </div>\n  );\n};\n\nexport default Departments;\n"]},"metadata":{},"sourceType":"module"}