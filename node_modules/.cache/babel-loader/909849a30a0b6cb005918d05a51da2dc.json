{"ast":null,"code":"var _jsxFileName = \"/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Navbar from './components/common/Navbar/Navbar';\nimport Departments from './components/pages/Departments/Departments';\nimport Employees from './components/pages/Employees/Employees';\nimport Datalist from './components/pages/Datalist/Datalist';\nimport NewDepartment from './components/pages/NewDepartment/NewDepartment';\nimport NewEmployee from './components/pages/NewEmployee/NewEmployee';\nimport EditEmployee from './components/pages/NewEmployee/NewEmployee';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [departments, setDepartments] = useState(['pénzügyi osztály', 'személyügy', 'igazgatóság', 'szakszervezet']); // const storedEmployees = localStorage.getItem('employees')\n  //   ? JSON.parse(localStorage.getItem('employees'))\n  //   : null;\n\n  useEffect(() => {\n    try {\n      const data = localStorage.getItem('employees');\n\n      if (data) {\n        setEmployees(JSON.parse(data));\n      } else {\n        console.log('no data found');\n        const dummy = {\n          employeeId: '',\n          familyName: '',\n          givenName: '',\n          birthdate: '',\n          daysOffLimit: '',\n          daysOffRemained: '',\n          department: ''\n        };\n        setEmployees(JSON.parse(dummy));\n      }\n    } catch (error) {\n      console.log('error');\n      console.error(error);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('employees', JSON.stringify(employees));\n  });\n  const [employees, setEmployees] = useState('');\n  console.log('employees', typeof employees);\n  console.log('employees', employees);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"departments\",\n        element: /*#__PURE__*/_jsxDEV(Departments, {\n          departments: departments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"newDepartment\",\n        element: /*#__PURE__*/_jsxDEV(NewDepartment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"employees\",\n        element: /*#__PURE__*/_jsxDEV(Employees, {\n          employees: employees\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"employees/new\",\n        element: /*#__PURE__*/_jsxDEV(NewEmployee, {\n          departments: departments,\n          employees: employees,\n          setEmployees: setEmployees\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"employees/edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEmployee, {\n          departments: departments,\n          employees: employees,\n          setEmployees: setEmployees\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"datalist\",\n        element: /*#__PURE__*/_jsxDEV(Datalist, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"2D/60kWRaeEuhPJ3TTRI/tVfXDQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/App.js"],"names":["React","useState","useEffect","Routes","Route","Navbar","Departments","Employees","Datalist","NewDepartment","NewEmployee","EditEmployee","App","departments","setDepartments","data","localStorage","getItem","setEmployees","JSON","parse","console","log","dummy","employeeId","familyName","givenName","birthdate","daysOffLimit","daysOffRemained","department","error","setItem","stringify","employees"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Navbar from './components/common/Navbar/Navbar';\nimport Departments from './components/pages/Departments/Departments';\nimport Employees from './components/pages/Employees/Employees';\nimport Datalist from './components/pages/Datalist/Datalist';\nimport NewDepartment from './components/pages/NewDepartment/NewDepartment';\nimport NewEmployee from './components/pages/NewEmployee/NewEmployee';\nimport EditEmployee from './components/pages/NewEmployee/NewEmployee';\nimport './App.scss';\n\nconst App = () => {\n  const [departments, setDepartments] = useState([\n    'pénzügyi osztály',\n    'személyügy',\n    'igazgatóság',\n    'szakszervezet',\n  ]);\n\n// const storedEmployees = localStorage.getItem('employees')\n//   ? JSON.parse(localStorage.getItem('employees'))\n//   : null;\n\n  useEffect(() => {\n    try {\n      const data = localStorage.getItem('employees');\n\n      if (data) {\n        setEmployees(JSON.parse(data));\n      } else {\n        console.log('no data found');\n        const dummy = {\n          employeeId: '',\n          familyName: '',\n          givenName: '',\n          birthdate: '',\n          daysOffLimit: '',\n          daysOffRemained: '',\n          department: '',\n        };\n        setEmployees(JSON.parse(dummy));\n      }\n    } catch (error) {\n      console.log('error');\n      console.error(error);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('employees', JSON.stringify(employees));\n  });\n\n  const [employees, setEmployees] = useState('');\n\n  console.log('employees', typeof employees);\n  console.log('employees', employees);\n\n  return (\n    <div className='App'>\n      <Navbar />\n      <Routes>\n        <Route\n          path='departments'\n          element={<Departments departments={departments} />}\n        />\n        <Route path='newDepartment' element={<NewDepartment />} />\n        <Route path='employees' element={<Employees employees={employees} />} />\n        <Route\n          path='employees/new'\n          element={\n            <NewEmployee\n              departments={departments}\n              employees={employees}\n              setEmployees={setEmployees}\n            />\n          }\n        />\n        <Route\n          path='employees/edit'\n          element={\n            <EditEmployee\n              departments={departments}\n              employees={employees}\n              setEmployees={setEmployees}\n            />\n          }\n        />\n        <Route path='datalist' element={<Datalist />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}