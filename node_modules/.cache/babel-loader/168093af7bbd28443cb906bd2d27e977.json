{"ast":null,"code":"var _jsxFileName = \"/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/common/InputField/InputField.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst InputField = ({\n  type,\n  name,\n  value,\n  onChange,\n  onBlur,\n  reference,\n  error,\n  labelText,\n  placeholder,\n  centerClass,\n  passwordShown,\n  setPasswordShown\n}) => {\n  const togglePasswordVisibility = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  let inputField;\n\n  if (name === 'password' || name === 'confirmPassword' || name === 'newPassword') {\n    inputField = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${error && 'was-validated'} password-eye-cont`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: `form-label m-2 ${centerClass}`,\n        htmlFor: name,\n        children: labelText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: placeholder,\n        className: `form-control m-2 ${centerClass}`,\n        type: type,\n        name: name,\n        value: value,\n        onChange: onChange,\n        onBlur: onBlur,\n        ref: reference\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `invalid-feedback mx-2 password-eye-feedback`,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  } else {\n    inputField = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${error && 'was-validated'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: `form-label m-2 ${centerClass}`,\n        htmlFor: name,\n        children: labelText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: placeholder,\n        className: `form-control m-2 ${centerClass}`,\n        type: type,\n        name: name,\n        value: value,\n        onChange: onChange,\n        onBlur: onBlur,\n        ref: reference\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `invalid-feedback mx-2 ${centerClass}`,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: inputField\n  }, void 0, false);\n};\n\n_c = InputField;\nexport default InputField;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"sources":["/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/common/InputField/InputField.js"],"names":["React","InputField","type","name","value","onChange","onBlur","reference","error","labelText","placeholder","centerClass","passwordShown","setPasswordShown","togglePasswordVisibility","inputField"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,IADkB;AAElBC,EAAAA,IAFkB;AAGlBC,EAAAA,KAHkB;AAIlBC,EAAAA,QAJkB;AAKlBC,EAAAA,MALkB;AAMlBC,EAAAA,SANkB;AAOlBC,EAAAA,KAPkB;AAQlBC,EAAAA,SARkB;AASlBC,EAAAA,WATkB;AAUlBC,EAAAA,WAVkB;AAWlBC,EAAAA,aAXkB;AAYlBC,EAAAA;AAZkB,CAAD,KAab;AACJ,QAAMC,wBAAwB,GAAG,MAAM;AACrCD,IAAAA,gBAAgB,CAACD,aAAa,GAAG,KAAH,GAAW,IAAzB,CAAhB;AACD,GAFD;;AAIA,MAAIG,UAAJ;;AACA,MACEZ,IAAI,KAAK,UAAT,IACAA,IAAI,KAAK,iBADT,IAEAA,IAAI,KAAK,aAHX,EAIE;AACAY,IAAAA,UAAU,gBACR;AAAK,MAAA,SAAS,EAAG,GAAEP,KAAK,IAAI,eAAgB,oBAA5C;AAAA,8BACE;AAAO,QAAA,SAAS,EAAG,kBAAiBG,WAAY,EAAhD;AAAmD,QAAA,OAAO,EAAER,IAA5D;AAAA,kBACGM;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,WAAW,EAAEC,WADf;AAEE,QAAA,SAAS,EAAG,oBAAmBC,WAAY,EAF7C;AAGE,QAAA,IAAI,EAAET,IAHR;AAIE,QAAA,IAAI,EAAEC,IAJR;AAKE,QAAA,KAAK,EAAEC,KALT;AAME,QAAA,QAAQ,EAAEC,QANZ;AAOE,QAAA,MAAM,EAAEC,MAPV;AAQE,QAAA,GAAG,EAAEC;AARP;AAAA;AAAA;AAAA;AAAA,cAJF,eAeE;AAAK,QAAA,SAAS,EAAG,6CAAjB;AAAA,kBACGC;AADH;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD,GA1BD,MA0BO;AACLO,IAAAA,UAAU,gBACR;AAAK,MAAA,SAAS,EAAG,GAAEP,KAAK,IAAI,eAAgB,EAA5C;AAAA,8BACE;AAAO,QAAA,SAAS,EAAG,kBAAiBG,WAAY,EAAhD;AAAmD,QAAA,OAAO,EAAER,IAA5D;AAAA,kBACGM;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,WAAW,EAAEC,WADf;AAEE,QAAA,SAAS,EAAG,oBAAmBC,WAAY,EAF7C;AAGE,QAAA,IAAI,EAAET,IAHR;AAIE,QAAA,IAAI,EAAEC,IAJR;AAKE,QAAA,KAAK,EAAEC,KALT;AAME,QAAA,QAAQ,EAAEC,QANZ;AAOE,QAAA,MAAM,EAAEC,MAPV;AAQE,QAAA,GAAG,EAAEC;AARP;AAAA;AAAA;AAAA;AAAA,cAJF,eAcE;AAAK,QAAA,SAAS,EAAG,yBAAwBI,WAAY,EAArD;AAAA,kBAAyDH;AAAzD;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAED,sBAAO;AAAA,cAAGO;AAAH,mBAAP;AACD,CAnED;;KAAMd,U;AAqEN,eAAeA,UAAf","sourcesContent":["import React from 'react';\n\nconst InputField = ({\n  type,\n  name,\n  value,\n  onChange,\n  onBlur,\n  reference,\n  error,\n  labelText,\n  placeholder,\n  centerClass,\n  passwordShown,\n  setPasswordShown,\n}) => {\n  const togglePasswordVisibility = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  let inputField;\n  if (\n    name === 'password' ||\n    name === 'confirmPassword' ||\n    name === 'newPassword'\n  ) {\n    inputField = (\n      <div className={`${error && 'was-validated'} password-eye-cont`}>\n        <label className={`form-label m-2 ${centerClass}`} htmlFor={name}>\n          {labelText}\n        </label>\n        <input\n          placeholder={placeholder}\n          className={`form-control m-2 ${centerClass}`}\n          type={type}\n          name={name}\n          value={value}\n          onChange={onChange}\n          onBlur={onBlur}\n          ref={reference}\n        />\n\n        <div className={`invalid-feedback mx-2 password-eye-feedback`}>\n          {error}\n        </div>\n      </div>\n    );\n  } else {\n    inputField = (\n      <div className={`${error && 'was-validated'}`}>\n        <label className={`form-label m-2 ${centerClass}`} htmlFor={name}>\n          {labelText}\n        </label>\n        <input\n          placeholder={placeholder}\n          className={`form-control m-2 ${centerClass}`}\n          type={type}\n          name={name}\n          value={value}\n          onChange={onChange}\n          onBlur={onBlur}\n          ref={reference}\n        />\n        <div className={`invalid-feedback mx-2 ${centerClass}`}>{error}</div>\n      </div>\n    );\n  }\n\n  return <>{inputField}</>;\n};\n\nexport default InputField;\n"]},"metadata":{},"sourceType":"module"}