{"ast":null,"code":"var _jsxFileName = \"/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/common/DepartmentForm/DepartmentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport InputFieldSet from '../InputFieldSet/InputFieldSet';\nimport { isFieldEmpty, isIdFormatValid, idExists } from '../../../utils/validators';\nimport { isFormValid, handleInputChange, handleInputBlur } from '../../../utils/form-validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DepartmentForm = ({\n  type,\n  id,\n  employee,\n  setEmployee,\n  employees,\n  setEmployees,\n  departments,\n  setDepartments,\n  department,\n  setDepartment\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState(type === 'edit' ? department : {\n    departmentId: '',\n    departmentName: ''\n  });\n  const [alert, setAlert] = useState(null);\n  const [formWasValidated, setFormWasValidated] = useState(false);\n  const references = {\n    departmentId: useRef(),\n    departmentName: useRef()\n  };\n  const formErrorTypes = Object.freeze({\n    required: `A mező kitöltése kötelező`,\n    departmentIdFormat: `Az azonosító nem megfelelő formátumú (2 kis - vagy nagybetű és 4 szám)`,\n    idNotUnique: `Ez az azonosító már létezik`\n  });\n  const [formErrors, setFormErrors] = useState({\n    departmentId: '',\n    departmentName: ''\n  });\n  const messageTypes = Object.freeze({\n    success: `Az adatok sikeresen mentésre kerültek`,\n    fail: `Az adatok mentése sikertelen`\n  });\n  const validators = {\n    departmentId: {\n      required: isFieldEmpty,\n      departmentIdFormat: isIdFormatValid,\n      idNotUnique: idExists\n    },\n    departmentName: {\n      required: isFieldEmpty\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setAlert('');\n    setFormErrors({\n      departmentId: '',\n      departmentName: ''\n    });\n    setFormWasValidated(false);\n    const isValid = isFormValid(formData, setFormErrors, validators, references, formErrorTypes);\n\n    if (isValid) {\n      if (type === 'new') {\n        setDepartments(prev => prev.concat(formData));\n        console.log('departments', departments);\n        setFormData({\n          departmentId: '',\n          departmentName: ''\n        });\n        setAlert({\n          alertType: 'success',\n          message: messageTypes.success\n        });\n      }\n\n      if (type === 'edit') {\n        const filtered = departments.filter(value => value.departmentId !== id);\n        setDepartments(filtered);\n        setDepartments(prev => [...prev, formData]);\n        setDepartment('');\n        setAlert({\n          alertType: 'success',\n          message: messageTypes.success\n        });\n      }\n    } else {\n      setFormWasValidated(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-sm mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/departments\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-dark mb-5\",\n        children: \"Vissza\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      className: `needs-validation ${formWasValidated ? 'was-validated' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(InputFieldSet, {\n        name: \"departmentId\",\n        value: formData.departmentId,\n        labelText: \"Azonos\\xEDt\\xF3 *\",\n        type: \"text\",\n        placeholder: \"pl: ab1234\",\n        onChange: e => {\n          handleInputChange(e, formData, setFormData);\n        },\n        onBlur: e => {\n          handleInputBlur(e, formData, setFormErrors, validators, references, formErrorTypes);\n        },\n        reference: references.departmentId,\n        error: formErrors.departmentId,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputFieldSet, {\n        name: \"departmentName\",\n        value: formData.departmentName,\n        labelText: \"N\\xE9v *\",\n        type: \"text\",\n        onChange: e => {\n          handleInputChange(e, formData, setFormData);\n        },\n        onBlur: e => {\n          handleInputBlur(e, formData, setFormErrors, validators, references, formErrorTypes);\n        },\n        reference: references.departmentName,\n        error: formErrors.departmentName,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-cont\",\n        children: alert && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `alert alert-${alert.alertType}`,\n          children: alert.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-l\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-warning mt-5\",\n          children: \"Ment\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/departments\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-dark mt-5\",\n            children: \"M\\xE9gsem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DepartmentForm, \"XtvM/V4rypmZ4TndzX23Mf4Rn74=\");\n\n_c = DepartmentForm;\nexport default DepartmentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DepartmentForm\");","map":{"version":3,"sources":["/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/common/DepartmentForm/DepartmentForm.js"],"names":["React","useState","useRef","NavLink","InputFieldSet","isFieldEmpty","isIdFormatValid","idExists","isFormValid","handleInputChange","handleInputBlur","DepartmentForm","type","id","employee","setEmployee","employees","setEmployees","departments","setDepartments","department","setDepartment","formData","setFormData","departmentId","departmentName","alert","setAlert","formWasValidated","setFormWasValidated","references","formErrorTypes","Object","freeze","required","departmentIdFormat","idNotUnique","formErrors","setFormErrors","messageTypes","success","fail","validators","handleSubmit","e","preventDefault","isValid","prev","concat","console","log","alertType","message","filtered","filter","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport InputFieldSet from '../InputFieldSet/InputFieldSet';\nimport {\n  isFieldEmpty,\n  isIdFormatValid,\n  idExists,\n} from '../../../utils/validators';\nimport {\n  isFormValid,\n  handleInputChange,\n  handleInputBlur,\n} from '../../../utils/form-validation';\n\nconst DepartmentForm = ({\n  type,\n  id,\n  employee,\n  setEmployee,\n  employees,\n  setEmployees,\n  departments,\n  setDepartments,\n  department,\n  setDepartment,\n}) => {\n  const [formData, setFormData] = useState(\n    type === 'edit'\n      ? department\n      : {\n          departmentId: '',\n          departmentName: '',\n        }\n  );\n  const [alert, setAlert] = useState(null);\n  const [formWasValidated, setFormWasValidated] = useState(false);\n\n  const references = {\n    departmentId: useRef(),\n    departmentName: useRef(),\n  };\n\n  const formErrorTypes = Object.freeze({\n    required: `A mező kitöltése kötelező`,\n    departmentIdFormat: `Az azonosító nem megfelelő formátumú (2 kis - vagy nagybetű és 4 szám)`,\n    idNotUnique: `Ez az azonosító már létezik`,\n  });\n\n  const [formErrors, setFormErrors] = useState({\n    departmentId: '',\n    departmentName: '',\n  });\n\n  const messageTypes = Object.freeze({\n    success: `Az adatok sikeresen mentésre kerültek`,\n    fail: `Az adatok mentése sikertelen`,\n  });\n\n  const validators = {\n    departmentId: {\n      required: isFieldEmpty,\n      departmentIdFormat: isIdFormatValid,\n      idNotUnique: idExists,\n    },\n    departmentName: {\n      required: isFieldEmpty,\n    },\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setAlert('');\n    setFormErrors({\n      departmentId: '',\n      departmentName: '',\n    });\n    setFormWasValidated(false);\n    const isValid = isFormValid(\n      formData,\n      setFormErrors,\n      validators,\n      references,\n      formErrorTypes\n    );\n\n    if (isValid) {\n      if (type === 'new') {\n        setDepartments(prev => prev.concat(formData));\n        console.log('departments', departments);\n\n        setFormData({\n          departmentId: '',\n          departmentName: '',\n        });\n        setAlert({ alertType: 'success', message: messageTypes.success });\n      }\n      if (type === 'edit') {\n        const filtered = departments.filter(value => value.departmentId !== id);\n\n        setDepartments(filtered);\n        setDepartments(prev => [...prev, formData]);\n        setDepartment('');\n        setAlert({ alertType: 'success', message: messageTypes.success });\n      }\n    } else {\n      setFormWasValidated(true);\n    }\n  };\n  return (\n    <div className='container-sm mt-5'>\n      <NavLink to='/departments'>\n        <button type='button' className='btn btn-dark mb-5'>\n          Vissza\n        </button>\n      </NavLink>\n      <form\n        noValidate\n        onSubmit={handleSubmit}\n        className={`needs-validation ${\n          formWasValidated ? 'was-validated' : ''\n        }`}\n      >\n        <InputFieldSet\n          name='departmentId'\n          value={formData.departmentId}\n          labelText='Azonosító *'\n          type='text'\n          placeholder='pl: ab1234'\n          onChange={e => {\n            handleInputChange(e, formData, setFormData);\n          }}\n          onBlur={e => {\n            handleInputBlur(\n              e,\n              formData,\n              setFormErrors,\n              validators,\n              references,\n              formErrorTypes\n            );\n          }}\n          reference={references.departmentId}\n          error={formErrors.departmentId}\n          required\n        />\n        <InputFieldSet\n          name='departmentName'\n          value={formData.departmentName}\n          labelText='Név *'\n          type='text'\n          onChange={e => {\n            handleInputChange(e, formData, setFormData);\n          }}\n          onBlur={e => {\n            handleInputBlur(\n              e,\n              formData,\n              setFormErrors,\n              validators,\n              references,\n              formErrorTypes\n            );\n          }}\n          reference={references.departmentName}\n          error={formErrors.departmentName}\n          required\n        />\n        <div className='alert-cont'>\n          {alert && (\n            <p className={`alert alert-${alert.alertType}`}>{alert.message}</p>\n          )}\n        </div>\n        <div className='container-l'>\n          <button type='submit' className='btn btn-warning mt-5'>\n            Mentés\n          </button>{' '}\n          <NavLink to='/departments'>\n            <button type='button' className='btn btn-dark mt-5'>\n              Mégsem\n            </button>{' '}\n          </NavLink>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default DepartmentForm;\n"]},"metadata":{},"sourceType":"module"}