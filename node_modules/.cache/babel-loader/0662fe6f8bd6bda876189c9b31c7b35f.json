{"ast":null,"code":"var _jsxFileName = \"/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/pages/Departments/Departments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport InputFieldSet from '../../common/InputFieldSet/InputFieldSet';\nimport { isFieldEmpty } from '../../../utils/validators';\nimport { isFormValid, handleInputChange, handleInputBlur } from '../../../utils/form-validation';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Departments = ({\n  department,\n  setDepartment\n  /* departments */\n\n}) => {\n  _s();\n\n  let navigate = useNavigate();\n  const [departments, setDepartments] = useState(['pénzügyi osztály', 'személyügy', 'igazgatóság', 'szakszervezet']);\n  const [formData, setFormData] = useState({\n    departmentId: ''\n  });\n  const [alert, setAlert] = useState(null);\n  const [formWasValidated, setFormWasValidated] = useState(false);\n  const references = {\n    departmentId: useRef()\n  };\n  const [formErrors, setFormErrors] = useState({\n    departmentId: ''\n  });\n  const messageTypes = Object.freeze({\n    success: `Az adatok sikeresen mentésre kerültek`,\n    fail: `Az adatok mentése sikertelen`\n  });\n  const formErrorTypes = Object.freeze({\n    required: `A mező kitöltése kötelező`\n  });\n  const validators = {\n    departmentId: {\n      required: isFieldEmpty\n    }\n  };\n\n  const handleModifyDepartment = e => {\n    e.preventDefault();\n    setAlert(null);\n    setFormErrors({\n      departmentId: ''\n    });\n    setFormWasValidated(false);\n    const isValid = isFormValid(formData, setFormErrors, validators, references, formErrorTypes);\n\n    if (isValid) {\n      let foundDepartment = departments.filter(department => department.departmentId === formData.departmentId)[0];\n      setDepartment(foundDepartment);\n      console.log('department', department);\n      navigate(`/departments/edit/${formData.departmentId}`);\n    } else {\n      console.log('no input');\n      setFormWasValidated(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-sm mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Szervezeti egys\\xE9gek\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/departments/new\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-dark mt-5\",\n        children: \"L\\xE9trehoz\\xE1s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: handleModifyDepartment,\n      className: `needs-validation ${formWasValidated ? 'was-validated' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(InputFieldSet, {\n        name: \"departmentId\",\n        value: formData.departmentId,\n        type: \"select\",\n        departmentOptions: departments,\n        onChange: e => {\n          handleInputChange(e, formData, setFormData);\n        },\n        onBlur: e => {\n          handleInputBlur(e, formData, setFormErrors, validators, references, formErrorTypes);\n        },\n        reference: references.departmentId,\n        error: formErrors.departmentId,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-l mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-warning mt-5\",\n          children: \"M\\xF3dos\\xEDt\\xE1s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger mt-5\",\n          children: \"T\\xF6rl\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Departments, \"fL0JROojz3+9pVX2OsJzNG01w5E=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Departments;\nexport default Departments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Departments\");","map":{"version":3,"sources":["/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/pages/Departments/Departments.js"],"names":["React","useState","useRef","NavLink","InputFieldSet","isFieldEmpty","isFormValid","handleInputChange","handleInputBlur","useNavigate","Departments","department","setDepartment","navigate","departments","setDepartments","formData","setFormData","departmentId","alert","setAlert","formWasValidated","setFormWasValidated","references","formErrors","setFormErrors","messageTypes","Object","freeze","success","fail","formErrorTypes","required","validators","handleModifyDepartment","e","preventDefault","isValid","foundDepartment","filter","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport InputFieldSet from '../../common/InputFieldSet/InputFieldSet';\nimport { isFieldEmpty } from '../../../utils/validators';\nimport {\n  isFormValid,\n  handleInputChange,\n  handleInputBlur,\n} from '../../../utils/form-validation';\nimport { useNavigate } from 'react-router-dom';\n\nconst Departments = ({ department, setDepartment /* departments */ }) => {\n  let navigate = useNavigate();\n\n  const [departments, setDepartments] = useState([\n    'pénzügyi osztály',\n    'személyügy',\n    'igazgatóság',\n    'szakszervezet',\n  ]);\n\n  const [formData, setFormData] = useState({\n    departmentId: '',\n  });\n\n  const [alert, setAlert] = useState(null);\n  const [formWasValidated, setFormWasValidated] = useState(false);\n\n  const references = {\n    departmentId: useRef(),\n  };\n\n  const [formErrors, setFormErrors] = useState({\n    departmentId: '',\n  });\n\n  const messageTypes = Object.freeze({\n    success: `Az adatok sikeresen mentésre kerültek`,\n    fail: `Az adatok mentése sikertelen`,\n  });\n\n  const formErrorTypes = Object.freeze({\n    required: `A mező kitöltése kötelező`,\n  });\n\n  const validators = {\n    departmentId: {\n      required: isFieldEmpty,\n    },\n  };\n\n  const handleModifyDepartment = e => {\n    e.preventDefault();\n    setAlert(null);\n    setFormErrors({\n      departmentId: '',\n    });\n    setFormWasValidated(false);\n    const isValid = isFormValid(\n      formData,\n      setFormErrors,\n      validators,\n      references,\n      formErrorTypes\n    );\n    if (isValid) {\n      let foundDepartment = departments.filter(\n        department => department.departmentId === formData.departmentId\n      )[0];\n      setDepartment(foundDepartment);\n      console.log('department', department);\n      navigate(`/departments/edit/${formData.departmentId}`);\n    } else {\n      console.log('no input');\n      setFormWasValidated(false);\n    }\n  };\n\n  return (\n    <div className='container-sm mt-5'>\n      <h1>Szervezeti egységek</h1>\n      <NavLink to='/departments/new'>\n        <button type='button' className='btn btn-dark mt-5'>\n          Létrehozás\n        </button>{' '}\n      </NavLink>\n      <form\n        noValidate\n        onSubmit={handleModifyDepartment}\n        className={`needs-validation ${\n          formWasValidated ? 'was-validated' : ''\n        }`}\n      >\n        <InputFieldSet\n          name='departmentId'\n          value={formData.departmentId}\n          type='select'\n          departmentOptions={departments}\n          onChange={e => {\n            handleInputChange(e, formData, setFormData);\n          }}\n          onBlur={e => {\n            handleInputBlur(\n              e,\n              formData,\n              setFormErrors,\n              validators,\n              references,\n              formErrorTypes\n            );\n          }}\n          reference={references.departmentId}\n          error={formErrors.departmentId}\n          required\n        />\n        <div className='container-l mt-5'>\n          <button type='submit' className='btn btn-warning mt-5'>\n            Módosítás\n          </button>\n          <button type='button' className='btn btn-danger mt-5'>\n            Törlés\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Departments;\n"]},"metadata":{},"sourceType":"module"}