{"ast":null,"code":"var _jsxFileName = \"/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/pages/Departments/Departments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport InputFieldSet from '../../common/InputFieldSet/InputFieldSet';\nimport { isFieldEmpty } from '../../../utils/validators';\nimport { isFormValid, handleInputChange, handleInputBlur } from '../../../utils/form-validation';\nimport { useNavigate } from 'react-router-dom';\nimport DeleteModal from '../../common/DeleteModal/DeleteModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Departments = ({\n  department,\n  setDepartment,\n  departments,\n  setDepartments\n}) => {\n  _s();\n\n  let navigate = useNavigate();\n  const deleteModalRef = useRef();\n  const state = {\n    button: 1\n  }; // const [departments, setDepartments] = useState([\n  //   'pénzügyi osztály',\n  //   'személyügy',\n  //   'igazgatóság',\n  //   'szakszervezet',\n  // ]);\n  // console.log(departments);\n\n  const [formData, setFormData] = useState({\n    departmentId: ''\n  }); // console.log('formData.departmentId', formData.departmentId);\n\n  const [alert, setAlert] = useState(null);\n  const [formWasValidated, setFormWasValidated] = useState(false);\n  const references = {\n    departmentId: useRef()\n  };\n  const [formErrors, setFormErrors] = useState({\n    departmentId: ''\n  });\n  const messageTypes = Object.freeze({\n    success: `Az adatok sikeresen mentésre kerültek`,\n    fail: `Az adatok mentése sikertelen`\n  });\n  const formErrorTypes = Object.freeze({\n    required: `A mező kitöltése kötelező`\n  });\n  const validators = {\n    departmentId: {\n      required: isFieldEmpty\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setAlert(null);\n    setFormErrors({\n      departmentId: ''\n    });\n    setFormWasValidated(false);\n    const isValid = isFormValid(formData, setFormErrors, validators, references, formErrorTypes);\n\n    if (isValid) {\n      const foundDepartment = departments.filter(department => department.departmentId === formData.departmentId)[0];\n      setDepartment(foundDepartment);\n\n      if (state.button === 1) {\n        navigate(`/departments/edit/${formData.departmentId}`);\n      }\n    } else {\n      console.log('no input');\n      setFormWasValidated(false);\n    }\n  };\n\n  const handleDeleteConfirm = () => {\n    const remainedDepartments = departments.filter(department => department.departmentId !== formData.departmentId);\n    setDepartments(remainedDepartments);\n    setAlert({\n      alertType: 'success',\n      message: messageTypes.deleteSuccess\n    });\n    setDepartment('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-sm mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Szervezeti egys\\xE9gek\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/departments/new\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-dark mt-5\",\n        children: \"L\\xE9trehoz\\xE1s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      className: `needs-validation ${formWasValidated ? 'was-validated' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(InputFieldSet, {\n        name: \"departmentId\",\n        value: formData.departmentId,\n        type: \"select\",\n        departmentOptions: departments,\n        onChange: e => {\n          handleInputChange(e, formData, setFormData);\n        },\n        onBlur: e => {\n          handleInputBlur(e, formData, setFormErrors, validators, references, formErrorTypes);\n        },\n        reference: references.departmentId,\n        error: formErrors.departmentId,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-l mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-warning mt-5\",\n          children: \"M\\xF3dos\\xEDt\\xE1s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger mt-5\",\n          children: \"T\\xF6rl\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Departments, \"6e3cKnb353WO21VuDuN9StpOBfY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Departments;\nexport default Departments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Departments\");","map":{"version":3,"sources":["/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/pages/Departments/Departments.js"],"names":["React","useState","useRef","NavLink","InputFieldSet","isFieldEmpty","isFormValid","handleInputChange","handleInputBlur","useNavigate","DeleteModal","Departments","department","setDepartment","departments","setDepartments","navigate","deleteModalRef","state","button","formData","setFormData","departmentId","alert","setAlert","formWasValidated","setFormWasValidated","references","formErrors","setFormErrors","messageTypes","Object","freeze","success","fail","formErrorTypes","required","validators","handleSubmit","e","preventDefault","isValid","foundDepartment","filter","console","log","handleDeleteConfirm","remainedDepartments","alertType","message","deleteSuccess"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport InputFieldSet from '../../common/InputFieldSet/InputFieldSet';\nimport { isFieldEmpty } from '../../../utils/validators';\nimport {\n  isFormValid,\n  handleInputChange,\n  handleInputBlur,\n} from '../../../utils/form-validation';\nimport { useNavigate } from 'react-router-dom';\nimport DeleteModal from '../../common/DeleteModal/DeleteModal';\n\nconst Departments = ({\n  department,\n  setDepartment,\n  departments,\n  setDepartments,\n}) => {\n  let navigate = useNavigate();\n  const deleteModalRef = useRef();\n  const state = {\n    button: 1,\n  };\n  // const [departments, setDepartments] = useState([\n  //   'pénzügyi osztály',\n  //   'személyügy',\n  //   'igazgatóság',\n  //   'szakszervezet',\n  // ]);\n\n  // console.log(departments);\n\n  const [formData, setFormData] = useState({\n    departmentId: '',\n  });\n\n  // console.log('formData.departmentId', formData.departmentId);\n\n  const [alert, setAlert] = useState(null);\n  const [formWasValidated, setFormWasValidated] = useState(false);\n\n  const references = {\n    departmentId: useRef(),\n  };\n\n  const [formErrors, setFormErrors] = useState({\n    departmentId: '',\n  });\n\n  const messageTypes = Object.freeze({\n    success: `Az adatok sikeresen mentésre kerültek`,\n    fail: `Az adatok mentése sikertelen`,\n  });\n\n  const formErrorTypes = Object.freeze({\n    required: `A mező kitöltése kötelező`,\n  });\n\n  const validators = {\n    departmentId: {\n      required: isFieldEmpty,\n    },\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setAlert(null);\n    setFormErrors({\n      departmentId: '',\n    });\n    setFormWasValidated(false);\n    const isValid = isFormValid(\n      formData,\n      setFormErrors,\n      validators,\n      references,\n      formErrorTypes\n    );\n    if (isValid) {\n      const foundDepartment = departments.filter(\n        department => department.departmentId === formData.departmentId\n      )[0];\n      setDepartment(foundDepartment);\n      if (state.button === 1) {\n        navigate(`/departments/edit/${formData.departmentId}`);\n      }\n    } else {\n      console.log('no input');\n      setFormWasValidated(false);\n    }\n  };\n\n  const handleDeleteConfirm = () => {\n    const remainedDepartments = departments.filter(\n      department => department.departmentId !== formData.departmentId\n    );\n    setDepartments(remainedDepartments);\n    setAlert({ alertType: 'success', message: messageTypes.deleteSuccess });\n    setDepartment('');\n  };\n\n  return (\n    <div className='container-sm mt-5'>\n      <h1>Szervezeti egységek</h1>\n      <NavLink to='/departments/new'>\n        <button type='button' className='btn btn-dark mt-5'>\n          Létrehozás\n        </button>{' '}\n      </NavLink>\n      <form\n        noValidate\n        onSubmit={handleSubmit}\n        className={`needs-validation ${\n          formWasValidated ? 'was-validated' : ''\n        }`}\n      >\n        <InputFieldSet\n          name='departmentId'\n          value={formData.departmentId}\n          type='select'\n          departmentOptions={departments}\n          onChange={e => {\n            handleInputChange(e, formData, setFormData);\n          }}\n          onBlur={e => {\n            handleInputBlur(\n              e,\n              formData,\n              setFormErrors,\n              validators,\n              references,\n              formErrorTypes\n            );\n          }}\n          reference={references.departmentId}\n          error={formErrors.departmentId}\n          required\n        />\n        <div className='container-l mt-5'>\n          <button type='submit' className='btn btn-warning mt-5'>\n            Módosítás\n          </button>\n          <button type='button' className='btn btn-danger mt-5'>\n            Törlés\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Departments;\n"]},"metadata":{},"sourceType":"module"}