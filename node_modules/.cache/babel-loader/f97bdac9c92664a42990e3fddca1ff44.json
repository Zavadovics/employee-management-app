{"ast":null,"code":"var _jsxFileName = \"/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import { Routes, Route } from 'react-router-dom';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/common/Navbar/Navbar';\nimport Departments from './components/pages/Departments/Departments';\nimport Employees from './components/pages/Employees/Employees';\nimport Datalist from './components/pages/Datalist/Datalist';\nimport NewDepartment from './components/pages/NewDepartment/NewDepartment';\nimport NewEmployee from './components/pages/NewEmployee/NewEmployee';\nimport EditEmployee from './components/pages/NewEmployee/NewEmployee';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [departments, setDepartments] = useState(['pénzügyi osztály', 'személyügy', 'igazgatóság', 'szakszervezet']); //   // only run once the first time this component is rendered\n  //  useEffect(() => {\n  //     if (localStorage.getItem(\"storedEmployees\")) {\n  //       setEmployees(JSON.parse(localStorage.getItem(\"storedEmployees\")))\n  //     }\n  //   }, [])\n  //  // run every time our employees state changes\n  //   useEffect(() => {\n  //     localStorage.setItem(\"storedEmployees\", JSON.stringify(employees))\n  //   }, [employees])\n\n  const storedEmployees = localStorage.getItem('storedEmployees') ? JSON.parse(localStorage.getItem('storedEmployees')) : [];\n  const [employees, setEmployees] = useState(storedEmployees); // console.log('storedEmployees', storedEmployees);\n\n  console.log(employees); // useEffect(() => {\n  //   try {\n  //     const data = localStorage.getItem('employees');\n  //     if (data) {\n  //       setEmployees(JSON.parse(data));\n  //     } else {\n  //       console.log('no data found');\n  //       const dummy = {\n  //         employeeId: '',\n  //         familyName: '',\n  //         givenName: '',\n  //         birthdate: '',\n  //         daysOffLimit: '',\n  //         daysOffRemained: '',\n  //         department: '',\n  //       };\n  //       setEmployees(JSON.parse(dummy));\n  //     }\n  //   } catch (error) {\n  //     console.log('error');\n  //     console.error(error);\n  //   }\n  // }, []);\n  // useEffect(() => {\n  //   localStorage.setItem('employees', JSON.stringify(employees));\n  // });\n  // const [employees, setEmployees] = useState(storedEmployees);\n  // console.log('employees', typeof employees);\n  // console.log('employees', employees);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/departments\",\n          element: /*#__PURE__*/_jsxDEV(Departments, {\n            departments: departments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/departments/new\",\n          element: /*#__PURE__*/_jsxDEV(NewDepartment, {\n            departments: departments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/employees\",\n          element: /*#__PURE__*/_jsxDEV(Employees, {\n            employees: employees,\n            setEmployees: setEmployees\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/employees/new\",\n          element: /*#__PURE__*/_jsxDEV(NewEmployee, {\n            departments: departments,\n            employees: employees,\n            setEmployees: setEmployees\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/employees/edit\",\n          element: /*#__PURE__*/_jsxDEV(EditEmployee, {\n            departments: departments,\n            employees: employees,\n            setEmployees: setEmployees\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/datalist\",\n          element: /*#__PURE__*/_jsxDEV(Datalist, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"VQLJquSHWprY2oNl0HuQ/qaO10E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Navbar","Departments","Employees","Datalist","NewDepartment","NewEmployee","EditEmployee","App","departments","setDepartments","storedEmployees","localStorage","getItem","JSON","parse","employees","setEmployees","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import { Routes, Route } from 'react-router-dom';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/common/Navbar/Navbar';\nimport Departments from './components/pages/Departments/Departments';\nimport Employees from './components/pages/Employees/Employees';\nimport Datalist from './components/pages/Datalist/Datalist';\nimport NewDepartment from './components/pages/NewDepartment/NewDepartment';\nimport NewEmployee from './components/pages/NewEmployee/NewEmployee';\nimport EditEmployee from './components/pages/NewEmployee/NewEmployee';\nimport './App.scss';\n\nconst App = () => {\n  const [departments, setDepartments] = useState([\n    'pénzügyi osztály',\n    'személyügy',\n    'igazgatóság',\n    'szakszervezet',\n  ]);\n\n\n//   // only run once the first time this component is rendered\n//  useEffect(() => {\n//     if (localStorage.getItem(\"storedEmployees\")) {\n//       setEmployees(JSON.parse(localStorage.getItem(\"storedEmployees\")))\n//     }\n//   }, [])\n\n//  // run every time our employees state changes\n//   useEffect(() => {\n//     localStorage.setItem(\"storedEmployees\", JSON.stringify(employees))\n//   }, [employees])\n\nconst storedEmployees = localStorage.getItem('storedEmployees')\n  ? JSON.parse(localStorage.getItem('storedEmployees'))\n  : [];\n\nconst [employees, setEmployees] = useState(storedEmployees);\n// console.log('storedEmployees', storedEmployees);\nconsole.log( employees);\n\n\n\n  // useEffect(() => {\n  //   try {\n  //     const data = localStorage.getItem('employees');\n\n  //     if (data) {\n  //       setEmployees(JSON.parse(data));\n  //     } else {\n  //       console.log('no data found');\n  //       const dummy = {\n  //         employeeId: '',\n  //         familyName: '',\n  //         givenName: '',\n  //         birthdate: '',\n  //         daysOffLimit: '',\n  //         daysOffRemained: '',\n  //         department: '',\n  //       };\n  //       setEmployees(JSON.parse(dummy));\n  //     }\n  //   } catch (error) {\n  //     console.log('error');\n  //     console.error(error);\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   localStorage.setItem('employees', JSON.stringify(employees));\n  // });\n\n  // const [employees, setEmployees] = useState(storedEmployees);\n\n  // console.log('employees', typeof employees);\n  // console.log('employees', employees);\n\n  return (\n    <div className='App'>\n      <Navbar />\n      <Router>\n            <Routes>\n              <Route path=\"/departments\" element={ <Departments departments={departments}/>} />\n              <Route path=\"/departments/new\" element={ <NewDepartment departments={departments}/>} />\n              <Route path=\"/employees\" element={ <Employees \n                employees={employees} \n                setEmployees={setEmployees}/>} />\n              <Route path=\"/employees/new\" element={ <NewEmployee \n                departments={departments}\n                employees={employees} \n                setEmployees={setEmployees}/>} />\n              <Route path=\"/employees/edit\" element={ <EditEmployee \n                departments={departments}\n                employees={employees} \n                setEmployees={setEmployees}/>} />\n              <Route path=\"/datalist\" element={ <Datalist />}/>\n            </Routes>\n      </Router>  \n     </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}