{"ast":null,"code":"var _jsxFileName = \"/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/pages/NewEmployee/NewEmployee.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport InputField from '../../common/InputField/InputField';\nimport { isFieldEmpty, isIdFormatValid } from '../../../utils/validators';\nimport { isFormValid, handleInputChange, handleInputBlur } from '../../../utils/form-validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewEmployee = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    employeeId: '',\n    familyName: '',\n    givenName: ''\n  });\n  const [alert, setAlert] = useState(null);\n  const [formWasValidated, setFormWasValidated] = useState(false);\n  const references = {\n    employeeId: useRef(),\n    familyName: useRef(),\n    givenName: useRef()\n  };\n  const formErrorTypes = Object.freeze({\n    required: `A mezÅ‘ kitÃ¶ltÃ©se kÃ¶telezÅ‘`,\n    employeeIdFormat: `Az azonosÃ­tÃ³ nem megfelelÅ‘ formÃ¡tumÃº (2 kis - vagy nagybetÅ± Ã©s 4 szÃ¡m)`\n  });\n  const [formErrors, setFormErrors] = useState({\n    employeeId: '',\n    familyName: '',\n    givenName: ''\n  });\n  const messageTypes = Object.freeze({\n    failCaptcha: `Please prove me that you're not a robot ðŸ¤–`\n  });\n  const validators = {\n    employeeId: {\n      required: isFieldEmpty,\n      employeeIdFormat: isIdFormatValid\n    },\n    familyName: {\n      required: isFieldEmpty\n    },\n    givenName: {\n      required: isFieldEmpty\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-sm mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\xDAj dolgoz\\xF3 hozz\\xE1ad\\xE1sa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true // onSubmit={handleLogin}\n      ,\n      className: `needs-validation ${formWasValidated && 'was-validated'}`,\n      children: [/*#__PURE__*/_jsxDEV(InputField, {\n        placeholder: \"pl: ab1234\",\n        name: \"employeeId\",\n        value: formData.employeeId,\n        labelText: \"Azonos\\xEDt\\xF3 *\",\n        onChange: e => {\n          handleInputChange(e, formData, setFormData);\n        },\n        onBlur: e => {\n          handleInputBlur(e, formData, setFormErrors, validators, references, formErrorTypes);\n        },\n        reference: references.employeeId,\n        error: formErrors.employeeId,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        name: \"familyName\",\n        value: formData.familyName,\n        labelText: \"Csal\\xE1di n\\xE9v *\",\n        onChange: e => {\n          handleInputChange(e, formData, setFormData);\n        },\n        onBlur: e => {\n          handleInputBlur(e, formData, setFormErrors, validators, references, formErrorTypes);\n        },\n        reference: references.familyName,\n        error: formErrors.familyName,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        name: \"givenName\",\n        value: formData.givenName,\n        labelText: \"Ut\\xF3n\\xE9v *\",\n        onChange: e => {\n          handleInputChange(e, formData, setFormData);\n        },\n        onBlur: e => {\n          handleInputBlur(e, formData, setFormErrors, validators, references, formErrorTypes);\n        },\n        reference: references.givenName,\n        error: formErrors.givenName,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-l\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-warning mt-5\",\n          children: \"Ment\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(NavLink, {\n          exact: true,\n          to: \"/employees\",\n          activeClassName: \"activeClicked\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-dark mt-5\",\n            children: \"M\\xE9gsem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewEmployee, \"mmYQiM+bDlZdujASXmw/9CtW814=\");\n\n_c = NewEmployee;\nexport default NewEmployee;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewEmployee\");","map":{"version":3,"sources":["/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/pages/NewEmployee/NewEmployee.js"],"names":["React","useState","useRef","NavLink","InputField","isFieldEmpty","isIdFormatValid","isFormValid","handleInputChange","handleInputBlur","NewEmployee","formData","setFormData","employeeId","familyName","givenName","alert","setAlert","formWasValidated","setFormWasValidated","references","formErrorTypes","Object","freeze","required","employeeIdFormat","formErrors","setFormErrors","messageTypes","failCaptcha","validators","e"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport InputField from '../../common/InputField/InputField';\nimport { isFieldEmpty, isIdFormatValid } from '../../../utils/validators';\nimport {\n  isFormValid,\n  handleInputChange,\n  handleInputBlur,\n} from '../../../utils/form-validation';\n\nconst NewEmployee = () => {\n  const [formData, setFormData] = useState({\n    employeeId: '',\n    familyName: '',\n    givenName: '',\n  });\n\n  const [alert, setAlert] = useState(null);\n  const [formWasValidated, setFormWasValidated] = useState(false);\n\n  const references = {\n    employeeId: useRef(),\n    familyName: useRef(),\n    givenName: useRef(),\n  };\n\n  const formErrorTypes = Object.freeze({\n    required: `A mezÅ‘ kitÃ¶ltÃ©se kÃ¶telezÅ‘`,\n    employeeIdFormat: `Az azonosÃ­tÃ³ nem megfelelÅ‘ formÃ¡tumÃº (2 kis - vagy nagybetÅ± Ã©s 4 szÃ¡m)`,\n  });\n\n  const [formErrors, setFormErrors] = useState({\n    employeeId: '',\n    familyName: '',\n    givenName: '',\n  });\n\n  const messageTypes = Object.freeze({\n    failCaptcha: `Please prove me that you're not a robot ðŸ¤–`,\n  });\n\n  const validators = {\n    employeeId: {\n      required: isFieldEmpty,\n      employeeIdFormat: isIdFormatValid,\n    },\n    familyName: {\n      required: isFieldEmpty,\n    },\n    givenName: {\n      required: isFieldEmpty,\n    },\n  };\n\n  return (\n    <div className='container-sm mt-5'>\n      <h1>Ãšj dolgozÃ³ hozzÃ¡adÃ¡sa</h1>\n      <form\n        noValidate\n        // onSubmit={handleLogin}\n        className={`needs-validation ${formWasValidated && 'was-validated'}`}\n      >\n        <InputField\n          placeholder='pl: ab1234'\n          name='employeeId'\n          value={formData.employeeId}\n          labelText='AzonosÃ­tÃ³ *'\n          onChange={e => {\n            handleInputChange(e, formData, setFormData);\n          }}\n          onBlur={e => {\n            handleInputBlur(\n              e,\n              formData,\n              setFormErrors,\n              validators,\n              references,\n              formErrorTypes\n            );\n          }}\n          reference={references.employeeId}\n          error={formErrors.employeeId}\n          required\n        />\n        <InputField\n          name='familyName'\n          value={formData.familyName}\n          labelText='CsalÃ¡di nÃ©v *'\n          onChange={e => {\n            handleInputChange(e, formData, setFormData);\n          }}\n          onBlur={e => {\n            handleInputBlur(\n              e,\n              formData,\n              setFormErrors,\n              validators,\n              references,\n              formErrorTypes\n            );\n          }}\n          reference={references.familyName}\n          error={formErrors.familyName}\n          required\n        />\n        <InputField\n          name='givenName'\n          value={formData.givenName}\n          labelText='UtÃ³nÃ©v *'\n          onChange={e => {\n            handleInputChange(e, formData, setFormData);\n          }}\n          onBlur={e => {\n            handleInputBlur(\n              e,\n              formData,\n              setFormErrors,\n              validators,\n              references,\n              formErrorTypes\n            );\n          }}\n          reference={references.givenName}\n          error={formErrors.givenName}\n          required\n        />\n        <div className='container-l'>\n          <button type='button' class='btn btn-warning mt-5'>\n            MentÃ©s\n          </button>{' '}\n          <NavLink exact to='/employees' activeClassName='activeClicked'>\n            <button type='button' class='btn btn-dark mt-5'>\n              MÃ©gsem\n            </button>{' '}\n          </NavLink>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default NewEmployee;\n"]},"metadata":{},"sourceType":"module"}