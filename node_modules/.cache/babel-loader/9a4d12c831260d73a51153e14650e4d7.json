{"ast":null,"code":"var _jsxFileName = \"/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/pages/Employees/Employees.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport InputFieldSet from '../../common/InputFieldSet/InputFieldSet';\nimport { isFieldEmpty } from '../../../utils/validators';\nimport { isFormValid, handleInputChange, handleInputBlur } from '../../../utils/form-validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Employees = ({\n  employees\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    employeeId: ''\n  });\n  console.log(formData.employeeId);\n  console.log(employees);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setAlert(null);\n    setFormErrors({\n      employee: ''\n    });\n    setFormWasValidated(false);\n    const isValid = isFormValid(formData, setFormErrors, validators, references, formErrorTypes);\n\n    if (isValid) {\n      console.log('isValid');\n      console.log(formData.employeeId);\n    } else {\n      console.log('false'); // setFormWasValidated(false);\n    }\n  }; // const handleModifyEmployee = employees => {\n  //   console.log(employees);\n  //   console.log(formData.employeeId);\n  //   let employeeToEdit = employees.filter(\n  //     employee => employee.employeeId === formData.employeeId\n  //   );\n  //   console.log(employeeToEdit);\n  // };\n\n\n  const [alert, setAlert] = useState(null);\n  const [formWasValidated, setFormWasValidated] = useState(false);\n  const references = {\n    employee: useRef()\n  };\n  const [formErrors, setFormErrors] = useState({\n    employee: ''\n  });\n  const messageTypes = Object.freeze({\n    success: `Az adatok sikeresen mentésre kerültek`,\n    fail: `Az adatok mentése sikertelen`\n  });\n  const formErrorTypes = Object.freeze({\n    required: `A mező kitöltése kötelező`\n  });\n  const validators = {\n    employee: {\n      required: isFieldEmpty\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-sm mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dolgoz\\xF3k\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      exact: true,\n      to: \"/employees/new\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-dark mt-5\",\n        children: \"L\\xE9trehoz\\xE1s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      className: `needs-validation ${formWasValidated && 'was-validated'}` // className={`needs-validation ${\n      //   formWasValidated ? 'was-validated' : ''\n      // }`}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(InputFieldSet, {\n        name: \"employee\",\n        value: formData.employee,\n        type: \"select\",\n        employeeOptions: employees,\n        onChange: e => {\n          handleInputChange(e, formData, setFormData);\n        },\n        onBlur: e => {\n          handleInputBlur(e, formData, setFormErrors, validators, references, formErrorTypes);\n        },\n        reference: references.employee,\n        error: formErrors.employee,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-l mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-warning mt-5\" // onClick={() => handleModifyEmployee(employees)}\n          ,\n          children: \"M\\xF3dos\\xEDt\\xE1s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger mt-5\",\n          children: \"T\\xF6rl\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Employees, \"UBUenRodhjwZS2nY2tuY6tLaG3E=\");\n\n_c = Employees;\nexport default Employees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"sources":["/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/pages/Employees/Employees.js"],"names":["React","useState","useRef","useEffect","NavLink","InputFieldSet","isFieldEmpty","isFormValid","handleInputChange","handleInputBlur","Employees","employees","formData","setFormData","employeeId","console","log","handleSubmit","e","preventDefault","setAlert","setFormErrors","employee","setFormWasValidated","isValid","validators","references","formErrorTypes","alert","formWasValidated","formErrors","messageTypes","Object","freeze","success","fail","required"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport InputFieldSet from '../../common/InputFieldSet/InputFieldSet';\nimport { isFieldEmpty } from '../../../utils/validators';\nimport {\n  isFormValid,\n  handleInputChange,\n  handleInputBlur,\n} from '../../../utils/form-validation';\n\nconst Employees = ({ employees }) => {\n  const [formData, setFormData] = useState({\n    employeeId: '',\n  });\n  console.log(formData.employeeId);\n  console.log(employees);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setAlert(null);\n    setFormErrors({\n      employee: '',\n    });\n    setFormWasValidated(false);\n    const isValid = isFormValid(\n      formData,\n      setFormErrors,\n      validators,\n      references,\n      formErrorTypes\n    );\n    if (isValid) {\n      console.log('isValid');\n      console.log(formData.employeeId);\n    } else {\n      console.log('false');\n      // setFormWasValidated(false);\n    }\n  };\n\n  // const handleModifyEmployee = employees => {\n  //   console.log(employees);\n  //   console.log(formData.employeeId);\n\n  //   let employeeToEdit = employees.filter(\n  //     employee => employee.employeeId === formData.employeeId\n  //   );\n  //   console.log(employeeToEdit);\n  // };\n\n  const [alert, setAlert] = useState(null);\n  const [formWasValidated, setFormWasValidated] = useState(false);\n\n  const references = {\n    employee: useRef(),\n  };\n\n  const [formErrors, setFormErrors] = useState({\n    employee: '',\n  });\n\n  const messageTypes = Object.freeze({\n    success: `Az adatok sikeresen mentésre kerültek`,\n    fail: `Az adatok mentése sikertelen`,\n  });\n\n  const formErrorTypes = Object.freeze({\n    required: `A mező kitöltése kötelező`,\n  });\n\n  const validators = {\n    employee: {\n      required: isFieldEmpty,\n    },\n  };\n\n  return (\n    <div className='container-sm mt-5'>\n      <h1>Dolgozók</h1>\n      <NavLink exact to='/employees/new'>\n        <button type='button' className='btn btn-dark mt-5'>\n          Létrehozás\n        </button>{' '}\n      </NavLink>\n      <form\n        noValidate\n        onSubmit={handleSubmit}\n        className={`needs-validation ${formWasValidated && 'was-validated'}`}\n\n        // className={`needs-validation ${\n        //   formWasValidated ? 'was-validated' : ''\n        // }`}\n      >\n        <InputFieldSet\n          name='employee'\n          value={formData.employee}\n          type='select'\n          employeeOptions={employees}\n          onChange={e => {\n            handleInputChange(e, formData, setFormData);\n          }}\n          onBlur={e => {\n            handleInputBlur(\n              e,\n              formData,\n              setFormErrors,\n              validators,\n              references,\n              formErrorTypes\n            );\n          }}\n          reference={references.employee}\n          error={formErrors.employee}\n          required\n        />\n        <div className='container-l mt-5'>\n          {/* <NavLink to={`/employees/edit/${formData.employeeId}`}> */}\n          <button\n            type='submit'\n            className='btn btn-warning mt-5'\n            // onClick={() => handleModifyEmployee(employees)}\n          >\n            Módosítás\n          </button>\n          {/* </NavLink> */}\n          <button type='button' className='btn btn-danger mt-5'>\n            Törlés\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Employees;\n"]},"metadata":{},"sourceType":"module"}