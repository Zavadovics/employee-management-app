{"ast":null,"code":"var _jsxFileName = \"/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import { Routes, Route } from 'react-router-dom';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/common/Navbar/Navbar';\nimport Departments from './components/pages/Departments/Departments';\nimport Employees from './components/pages/Employees/Employees';\nimport Datalist from './components/pages/Datalist/Datalist';\nimport NewDepartment from './components/pages/NewDepartment/NewDepartment';\nimport NewEmployee from './components/pages/NewEmployee/NewEmployee';\nimport EditEmployee from './components/pages/NewEmployee/NewEmployee';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [departments, setDepartments] = useState(['pénzügyi osztály', 'személyügy', 'igazgatóság', 'szakszervezet']); //   // only run once the first time this component is rendered\n  //  useEffect(() => {\n  //     if (localStorage.getItem(\"storedEmployees\")) {\n  //       setEmployees(JSON.parse(localStorage.getItem(\"storedEmployees\")))\n  //     }\n  //   }, [])\n  //  // run every time our employees state changes\n  //   useEffect(() => {\n  //     localStorage.setItem(\"storedEmployees\", JSON.stringify(employees))\n  //   }, [employees])\n\n  const storedEmployees = localStorage.getItem('employees') ? JSON.parse(localStorage.getItem('employees')) : [];\n  const [employees, setEmployees] = useState(storedEmployees); // console.log('storedEmployees', storedEmployees);\n  // console.log(typeof storedEmployees);\n  // useEffect(() => {\n  //   try {\n  //     const data = localStorage.getItem('employees');\n  //     if (data) {\n  //       setEmployees(JSON.parse(data));\n  //     } else {\n  //       console.log('no data found');\n  //       const dummy = {\n  //         employeeId: '',\n  //         familyName: '',\n  //         givenName: '',\n  //         birthdate: '',\n  //         daysOffLimit: '',\n  //         daysOffRemained: '',\n  //         department: '',\n  //       };\n  //       setEmployees(JSON.parse(dummy));\n  //     }\n  //   } catch (error) {\n  //     console.log('error');\n  //     console.error(error);\n  //   }\n  // }, []);\n  // useEffect(() => {\n  //   localStorage.setItem('employees', JSON.stringify(employees));\n  // });\n  // const [employees, setEmployees] = useState(storedEmployees);\n  // console.log('employees', typeof employees);\n  // console.log('employees', employees);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/departments\",\n          children: /*#__PURE__*/_jsxDEV(Departments, {\n            departments: departments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"newDepartment\",\n          element: /*#__PURE__*/_jsxDEV(NewDepartment, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"employees\",\n          element: /*#__PURE__*/_jsxDEV(Employees, {\n            employees: employees,\n            setEmployees: setEmployees\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"employees/new\",\n          element: /*#__PURE__*/_jsxDEV(NewEmployee, {\n            departments: departments,\n            employees: employees,\n            setEmployees: setEmployees\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"employees/edit\",\n          element: /*#__PURE__*/_jsxDEV(EditEmployee, {\n            departments: departments,\n            employees: employees,\n            setEmployees: setEmployees\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"datalist\",\n          element: /*#__PURE__*/_jsxDEV(Datalist, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 2\n    }, this), \"    \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"VQLJquSHWprY2oNl0HuQ/qaO10E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Navbar","Departments","Employees","Datalist","NewDepartment","NewEmployee","EditEmployee","App","departments","setDepartments","storedEmployees","localStorage","getItem","JSON","parse","employees","setEmployees"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import { Routes, Route } from 'react-router-dom';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/common/Navbar/Navbar';\nimport Departments from './components/pages/Departments/Departments';\nimport Employees from './components/pages/Employees/Employees';\nimport Datalist from './components/pages/Datalist/Datalist';\nimport NewDepartment from './components/pages/NewDepartment/NewDepartment';\nimport NewEmployee from './components/pages/NewEmployee/NewEmployee';\nimport EditEmployee from './components/pages/NewEmployee/NewEmployee';\nimport './App.scss';\n\nconst App = () => {\n  const [departments, setDepartments] = useState([\n    'pénzügyi osztály',\n    'személyügy',\n    'igazgatóság',\n    'szakszervezet',\n  ]);\n\n\n//   // only run once the first time this component is rendered\n//  useEffect(() => {\n//     if (localStorage.getItem(\"storedEmployees\")) {\n//       setEmployees(JSON.parse(localStorage.getItem(\"storedEmployees\")))\n//     }\n//   }, [])\n\n//  // run every time our employees state changes\n//   useEffect(() => {\n//     localStorage.setItem(\"storedEmployees\", JSON.stringify(employees))\n//   }, [employees])\n\nconst storedEmployees = localStorage.getItem('employees')\n  ? JSON.parse(localStorage.getItem('employees'))\n  : [];\n\nconst [employees, setEmployees] = useState(storedEmployees);\n// console.log('storedEmployees', storedEmployees);\n// console.log(typeof storedEmployees);\n\n\n\n  // useEffect(() => {\n  //   try {\n  //     const data = localStorage.getItem('employees');\n\n  //     if (data) {\n  //       setEmployees(JSON.parse(data));\n  //     } else {\n  //       console.log('no data found');\n  //       const dummy = {\n  //         employeeId: '',\n  //         familyName: '',\n  //         givenName: '',\n  //         birthdate: '',\n  //         daysOffLimit: '',\n  //         daysOffRemained: '',\n  //         department: '',\n  //       };\n  //       setEmployees(JSON.parse(dummy));\n  //     }\n  //   } catch (error) {\n  //     console.log('error');\n  //     console.error(error);\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   localStorage.setItem('employees', JSON.stringify(employees));\n  // });\n\n  // const [employees, setEmployees] = useState(storedEmployees);\n\n  // console.log('employees', typeof employees);\n  // console.log('employees', employees);\n\n  return (\n    <div className='App'>\n      <Navbar />\n <Router>\n        <Switch>  \n           <Route exact path='/departments'>\n              <Departments\n                departments={departments}\n                />\n            </Route>  \n           \n        <Route path='newDepartment' element={<NewDepartment />} />\n        <Route path='employees' element={<Employees employees={employees} setEmployees={setEmployees}/>} />\n        <Route\n          path='employees/new'\n          element={\n            <NewEmployee\n              departments={departments}\n              employees={employees}\n              setEmployees={setEmployees}\n            />\n          }\n        />\n        <Route\n          path='employees/edit'\n          element={\n            <EditEmployee\n              departments={departments}\n              employees={employees}\n              setEmployees={setEmployees}\n            />\n          }\n        />\n        <Route path='datalist' element={<Datalist />} />\n   </Switch>\n      </Router>    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}