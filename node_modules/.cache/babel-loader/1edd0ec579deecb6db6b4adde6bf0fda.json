{"ast":null,"code":"var _jsxFileName = \"/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Navbar from './components/common/Navbar/Navbar';\nimport Departments from './components/pages/Departments/Departments';\nimport NewDepartment from './components/pages/NewDepartment/NewDepartment';\nimport EditDepartment from './components/pages/EditDepartment/EditDepartment';\nimport Employees from './components/pages/Employees/Employees';\nimport NewEmployee from './components/pages/NewEmployee/NewEmployee';\nimport EditEmployee from './components/pages/EditEmployee/EditEmployee';\nimport Datalist from './components/pages/Datalist/Datalist';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [employees, setEmployees] = useState([]);\n  const [employee, setEmployee] = useState('');\n  const [departments, setDepartments] = useState([]);\n  const [department, setDepartment] = useState(''); // only runs once the first time this component is rendered\n\n  useEffect(() => {\n    if (localStorage.getItem('storedEmployees')) {\n      setEmployees(JSON.parse(localStorage.getItem('storedEmployees')));\n    }\n  }, []); // runs every time our employees state changes\n\n  useEffect(() => {\n    localStorage.setItem('storedEmployees', JSON.stringify(employees));\n  }, [employees]); // only runs once the first time this component is rendered\n\n  useEffect(() => {\n    if (localStorage.getItem('storedDepartments')) {\n      setDepartments(JSON.parse(localStorage.getItem('storedDepartments')));\n    }\n  }, []); // runs every time our employees state changes\n\n  useEffect(() => {\n    localStorage.setItem('storedDepartments', JSON.stringify(departments));\n  }, [departments]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/departments\",\n        element: /*#__PURE__*/_jsxDEV(Departments, {\n          department: department,\n          setDepartment: setDepartment,\n          departments: departments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/departments/new\",\n        element: /*#__PURE__*/_jsxDEV(NewDepartment, {\n          department: department,\n          setDepartment: setDepartment,\n          departments: departments,\n          setDepartments: setDepartments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/departments/edit/:id\",\n        element: /*#__PURE__*/_jsxDEV(EditDepartment, {\n          department: department,\n          setDepartment: setDepartment,\n          departments: departments,\n          setDepartments: setDepartments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/employees\",\n        element: /*#__PURE__*/_jsxDEV(Employees, {\n          employee: employee,\n          setEmployee: setEmployee,\n          employees: employees,\n          setEmployees: setEmployees\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/employees/new\",\n        element: /*#__PURE__*/_jsxDEV(NewEmployee, {\n          employee: employee,\n          departments: departments,\n          employees: employees,\n          setEmployees: setEmployees\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/employees/edit/:id\",\n        element: /*#__PURE__*/_jsxDEV(EditEmployee, {\n          departments: departments,\n          employee: employee,\n          setEmployee: setEmployee,\n          employees: employees,\n          setEmployees: setEmployees\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/datalist\",\n        element: /*#__PURE__*/_jsxDEV(Datalist, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"G1NKJk5cNxSPhLpb/qhc+dLZj3U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navbar","Departments","NewDepartment","EditDepartment","Employees","NewEmployee","EditEmployee","Datalist","App","employees","setEmployees","employee","setEmployee","departments","setDepartments","department","setDepartment","localStorage","getItem","JSON","parse","setItem","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,OAAOC,aAAP,MAA0B,gDAA1B;AACA,OAAOC,cAAP,MAA2B,kDAA3B;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAO,YAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,EAAD,CAA5C,CAJgB,CAMhB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsB,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAJ,EAA6C;AAC3CR,MAAAA,YAAY,CAACS,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAD,CAAZ;AACD;AACF,GAJQ,EAIN,EAJM,CAAT,CAPgB,CAahB;;AACAvB,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,YAAY,CAACI,OAAb,CAAqB,iBAArB,EAAwCF,IAAI,CAACG,SAAL,CAAeb,SAAf,CAAxC;AACD,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT,CAdgB,CAkBhB;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsB,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAJ,EAA+C;AAC7CJ,MAAAA,cAAc,CAACK,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAX,CAAD,CAAd;AACD;AACF,GAJQ,EAIN,EAJM,CAAT,CAnBgB,CAyBhB;;AACAvB,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,YAAY,CAACI,OAAb,CAAqB,mBAArB,EAA0CF,IAAI,CAACG,SAAL,CAAeT,WAAf,CAA1C;AACD,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,cADP;AAEE,QAAA,OAAO,eACL,QAAC,WAAD;AACE,UAAA,UAAU,EAAEE,UADd;AAEE,UAAA,aAAa,EAAEC,aAFjB;AAGE,UAAA,WAAW,EAAEH;AAHf;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,kBADP;AAEE,QAAA,OAAO,eACL,QAAC,aAAD;AACE,UAAA,UAAU,EAAEE,UADd;AAEE,UAAA,aAAa,EAAEC,aAFjB;AAGE,UAAA,WAAW,EAAEH,WAHf;AAIE,UAAA,cAAc,EAAEC;AAJlB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cAXF,eAsBE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,uBADP;AAEE,QAAA,OAAO,eACL,QAAC,cAAD;AACE,UAAA,UAAU,EAAEC,UADd;AAEE,UAAA,aAAa,EAAEC,aAFjB;AAGE,UAAA,WAAW,EAAEH,WAHf;AAIE,UAAA,cAAc,EAAEC;AAJlB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cAtBF,eAiCE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,OAAO,eACL,QAAC,SAAD;AACE,UAAA,QAAQ,EAAEH,QADZ;AAEE,UAAA,WAAW,EAAEC,WAFf;AAGE,UAAA,SAAS,EAAEH,SAHb;AAIE,UAAA,YAAY,EAAEC;AAJhB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cAjCF,eA4CE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,gBADP;AAEE,QAAA,OAAO,eACL,QAAC,WAAD;AACE,UAAA,QAAQ,EAAEC,QADZ;AAEE,UAAA,WAAW,EAAEE,WAFf;AAGE,UAAA,SAAS,EAAEJ,SAHb;AAIE,UAAA,YAAY,EAAEC;AAJhB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cA5CF,eAuDE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,qBADP;AAEE,QAAA,OAAO,eACL,QAAC,YAAD;AACE,UAAA,WAAW,EAAEG,WADf;AAEE,UAAA,QAAQ,EAAEF,QAFZ;AAGE,UAAA,WAAW,EAAEC,WAHf;AAIE,UAAA,SAAS,EAAEH,SAJb;AAKE,UAAA,YAAY,EAAEC;AALhB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cAvDF,eAmEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,cAnEF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0ED,CAxGD;;GAAMF,G;;KAAAA,G;AA0GN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Navbar from './components/common/Navbar/Navbar';\nimport Departments from './components/pages/Departments/Departments';\nimport NewDepartment from './components/pages/NewDepartment/NewDepartment';\nimport EditDepartment from './components/pages/EditDepartment/EditDepartment';\nimport Employees from './components/pages/Employees/Employees';\nimport NewEmployee from './components/pages/NewEmployee/NewEmployee';\nimport EditEmployee from './components/pages/EditEmployee/EditEmployee';\nimport Datalist from './components/pages/Datalist/Datalist';\nimport './App.scss';\n\nconst App = () => {\n  const [employees, setEmployees] = useState([]);\n  const [employee, setEmployee] = useState('');\n  const [departments, setDepartments] = useState([]);\n  const [department, setDepartment] = useState('');\n\n  // only runs once the first time this component is rendered\n  useEffect(() => {\n    if (localStorage.getItem('storedEmployees')) {\n      setEmployees(JSON.parse(localStorage.getItem('storedEmployees')));\n    }\n  }, []);\n\n  // runs every time our employees state changes\n  useEffect(() => {\n    localStorage.setItem('storedEmployees', JSON.stringify(employees));\n  }, [employees]);\n\n  // only runs once the first time this component is rendered\n  useEffect(() => {\n    if (localStorage.getItem('storedDepartments')) {\n      setDepartments(JSON.parse(localStorage.getItem('storedDepartments')));\n    }\n  }, []);\n\n  // runs every time our employees state changes\n  useEffect(() => {\n    localStorage.setItem('storedDepartments', JSON.stringify(departments));\n  }, [departments]);\n\n  return (\n    <div className='App'>\n      <Navbar />\n      <Routes>\n        <Route\n          path='/departments'\n          element={\n            <Departments\n              department={department}\n              setDepartment={setDepartment}\n              departments={departments}\n            />\n          }\n        />\n        <Route\n          path='/departments/new'\n          element={\n            <NewDepartment\n              department={department}\n              setDepartment={setDepartment}\n              departments={departments}\n              setDepartments={setDepartments}\n            />\n          }\n        />\n        <Route\n          path='/departments/edit/:id'\n          element={\n            <EditDepartment\n              department={department}\n              setDepartment={setDepartment}\n              departments={departments}\n              setDepartments={setDepartments}\n            />\n          }\n        />\n        <Route\n          path='/employees'\n          element={\n            <Employees\n              employee={employee}\n              setEmployee={setEmployee}\n              employees={employees}\n              setEmployees={setEmployees}\n            />\n          }\n        />\n        <Route\n          path='/employees/new'\n          element={\n            <NewEmployee\n              employee={employee}\n              departments={departments}\n              employees={employees}\n              setEmployees={setEmployees}\n            />\n          }\n        />\n        <Route\n          path='/employees/edit/:id'\n          element={\n            <EditEmployee\n              departments={departments}\n              employee={employee}\n              setEmployee={setEmployee}\n              employees={employees}\n              setEmployees={setEmployees}\n            />\n          }\n        />\n        <Route path='/datalist' element={<Datalist />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}