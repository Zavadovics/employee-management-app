{"ast":null,"code":"export const isFieldEmpty = value => {\n  return value !== '';\n};\nconst regex = /[A-Za-z]{2}[0-9]{4}/;\nexport const isIdFormatValid = value => {\n  return regex.test(value);\n};\nexport const isIdLengthValid = value => {\n  return value.length === 6;\n};\nexport const idExists = value => {\n  const employees = localStorage.getItem('storedEmployees'); // const departments = localStorage.getItem('storedDepartments');\n\n  employees.map(employee => employee.employeeId !== value);\n  return value.length === 6;\n};\nexport const isValueNegative = value => {\n  return value > 0;\n};\nexport const isDateInFuture = value => {\n  const futureDate = new Date(value);\n  const actualDate = new Date();\n  return futureDate <= actualDate;\n};","map":{"version":3,"sources":["/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/utils/validators.js"],"names":["isFieldEmpty","value","regex","isIdFormatValid","test","isIdLengthValid","length","idExists","employees","localStorage","getItem","map","employee","employeeId","isValueNegative","isDateInFuture","futureDate","Date","actualDate"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAGC,KAAK,IAAI;AACnC,SAAOA,KAAK,KAAK,EAAjB;AACD,CAFM;AAIP,MAAMC,KAAK,GAAG,qBAAd;AAEA,OAAO,MAAMC,eAAe,GAAGF,KAAK,IAAI;AACtC,SAAOC,KAAK,CAACE,IAAN,CAAWH,KAAX,CAAP;AACD,CAFM;AAIP,OAAO,MAAMI,eAAe,GAAGJ,KAAK,IAAI;AACtC,SAAOA,KAAK,CAACK,MAAN,KAAiB,CAAxB;AACD,CAFM;AAIP,OAAO,MAAMC,QAAQ,GAAGN,KAAK,IAAI;AAC/B,QAAMO,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAlB,CAD+B,CAE/B;;AAEAF,EAAAA,SAAS,CAACG,GAAV,CAAcC,QAAQ,IAAIA,QAAQ,CAACC,UAAT,KAAwBZ,KAAlD;AACA,SAAOA,KAAK,CAACK,MAAN,KAAiB,CAAxB;AACD,CANM;AAQP,OAAO,MAAMQ,eAAe,GAAGb,KAAK,IAAI;AACtC,SAAOA,KAAK,GAAG,CAAf;AACD,CAFM;AAIP,OAAO,MAAMc,cAAc,GAAGd,KAAK,IAAI;AACrC,QAAMe,UAAU,GAAG,IAAIC,IAAJ,CAAShB,KAAT,CAAnB;AACA,QAAMiB,UAAU,GAAG,IAAID,IAAJ,EAAnB;AACA,SAAOD,UAAU,IAAIE,UAArB;AACD,CAJM","sourcesContent":["export const isFieldEmpty = value => {\n  return value !== '';\n};\n\nconst regex = /[A-Za-z]{2}[0-9]{4}/;\n\nexport const isIdFormatValid = value => {\n  return regex.test(value);\n};\n\nexport const isIdLengthValid = value => {\n  return value.length === 6;\n};\n\nexport const idExists = value => {\n  const employees = localStorage.getItem('storedEmployees');\n  // const departments = localStorage.getItem('storedDepartments');\n\n  employees.map(employee => employee.employeeId !== value);\n  return value.length === 6;\n};\n\nexport const isValueNegative = value => {\n  return value > 0;\n};\n\nexport const isDateInFuture = value => {\n  const futureDate = new Date(value);\n  const actualDate = new Date();\n  return futureDate <= actualDate;\n};\n"]},"metadata":{},"sourceType":"module"}