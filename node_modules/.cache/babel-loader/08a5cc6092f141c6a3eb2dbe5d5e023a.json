{"ast":null,"code":"var _jsxFileName = \"/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/pages/Employees/Employees.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport InputFieldSet from '../../common/InputFieldSet/InputFieldSet';\nimport { isFieldEmpty, isIdFormatValid } from '../../../utils/validators';\nimport { isFormValid, handleInputChange, handleInputBlur } from '../../../utils/form-validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Employees = ({\n  employees,\n  setEmployees,\n  test,\n  setTest\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    employee: ''\n  });\n  console.log('employees', employees);\n  useEffect(() => {\n    const fullNames = [];\n\n    for (let i = 0; i < employees.length; i++) {\n      fullNames.push(employees[i].familyName + ' ' + employees[i].givenName);\n      setNamesOfEmployees(fullNames);\n    }\n  }, []);\n  const [namesOfEmployees, setNamesOfEmployees] = useState();\n  console.log('namesOfEmployees', namesOfEmployees);\n  const [alert, setAlert] = useState(null);\n  const [formWasValidated, setFormWasValidated] = useState(false);\n  const references = {\n    employee: useRef()\n  };\n  const [formErrors, setFormErrors] = useState({\n    employee: ''\n  });\n  const messageTypes = Object.freeze({\n    success: `Az adatok sikeresen mentésre kerültek`,\n    fail: `Az adatok mentése sikertelen`\n  });\n  const formErrorTypes = Object.freeze({\n    required: `A mező kitöltése kötelező`\n  });\n  const validators = {\n    employee: {\n      required: isFieldEmpty\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-sm mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dolgoz\\xF3k\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      exact: true,\n      to: \"/employees/new\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-dark mt-5\",\n        children: \"L\\xE9trehoz\\xE1s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFieldSet, {\n      name: \"employee\",\n      value: formData.employee,\n      type: \"select\",\n      options: namesOfEmployees,\n      onChange: e => {\n        handleInputChange(e, formData, setFormData);\n      },\n      onBlur: e => {\n        handleInputBlur(e, formData, setFormErrors, validators, references, formErrorTypes);\n      },\n      reference: references.employee,\n      error: formErrors.employee,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-l mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/employees/edit`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-warning mt-5\",\n          children: \"M\\xF3dos\\xEDt\\xE1s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger mt-5\",\n        children: \"T\\xF6rl\\xE9s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Employees, \"tCQQRhiFOMi4jK/ig1qqqtV3rds=\");\n\n_c = Employees;\nexport default Employees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"sources":["/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/pages/Employees/Employees.js"],"names":["React","useState","useRef","useEffect","NavLink","InputFieldSet","isFieldEmpty","isIdFormatValid","isFormValid","handleInputChange","handleInputBlur","Employees","employees","setEmployees","test","setTest","formData","setFormData","employee","console","log","fullNames","i","length","push","familyName","givenName","setNamesOfEmployees","namesOfEmployees","alert","setAlert","formWasValidated","setFormWasValidated","references","formErrors","setFormErrors","messageTypes","Object","freeze","success","fail","formErrorTypes","required","validators","e"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport InputFieldSet from '../../common/InputFieldSet/InputFieldSet';\nimport { isFieldEmpty, isIdFormatValid } from '../../../utils/validators';\nimport {\n  isFormValid,\n  handleInputChange,\n  handleInputBlur,\n} from '../../../utils/form-validation';\n\nconst Employees = ({ employees, setEmployees, test, setTest }) => {\n  const [formData, setFormData] = useState({\n    employee: '',\n  });\n\n  console.log('employees', employees);\n\n  useEffect(() => {\n    const fullNames = [];\n    for (let i = 0; i < employees.length; i++) {\n      fullNames.push(employees[i].familyName + ' ' + employees[i].givenName);\n      setNamesOfEmployees(fullNames);\n    }\n  }, []);\n\n  const [namesOfEmployees, setNamesOfEmployees] = useState();\n\n  console.log('namesOfEmployees', namesOfEmployees);\n\n  const [alert, setAlert] = useState(null);\n  const [formWasValidated, setFormWasValidated] = useState(false);\n\n  const references = {\n    employee: useRef(),\n  };\n\n  const [formErrors, setFormErrors] = useState({\n    employee: '',\n  });\n\n  const messageTypes = Object.freeze({\n    success: `Az adatok sikeresen mentésre kerültek`,\n    fail: `Az adatok mentése sikertelen`,\n  });\n\n  const formErrorTypes = Object.freeze({\n    required: `A mező kitöltése kötelező`,\n  });\n\n  const validators = {\n    employee: {\n      required: isFieldEmpty,\n    },\n  };\n\n  return (\n    <div className='container-sm mt-5'>\n      <h1>Dolgozók</h1>\n      <NavLink exact to='/employees/new'>\n        <button type='button' className='btn btn-dark mt-5'>\n          Létrehozás\n        </button>{' '}\n      </NavLink>\n\n      <InputFieldSet\n        name='employee'\n        value={formData.employee}\n        type='select'\n        options={namesOfEmployees}\n        onChange={e => {\n          handleInputChange(e, formData, setFormData);\n        }}\n        onBlur={e => {\n          handleInputBlur(\n            e,\n            formData,\n            setFormErrors,\n            validators,\n            references,\n            formErrorTypes\n          );\n        }}\n        reference={references.employee}\n        error={formErrors.employee}\n        required\n      />\n\n      <div className='container-l mt-5'>\n        <NavLink to={`/employees/edit`}>\n          <button type='button' className='btn btn-warning mt-5'>\n            Módosítás\n          </button>\n        </NavLink>\n        <button type='button' className='btn btn-danger mt-5'>\n          Törlés\n        </button>{' '}\n      </div>\n    </div>\n  );\n};\n\nexport default Employees;\n"]},"metadata":{},"sourceType":"module"}