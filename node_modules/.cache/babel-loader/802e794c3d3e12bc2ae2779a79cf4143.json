{"ast":null,"code":"var _jsxFileName = \"/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/common/InputFieldSet/InputFieldSet.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputFieldSet = ({\n  name,\n  type,\n  value,\n  placeholder,\n  error,\n  formData,\n  onChange,\n  onBlur,\n  labelText,\n  required,\n  reference,\n  employeeOptions,\n  departmentOptions,\n  options\n}) => {\n  let inputField;\n\n  if (type === 'select' && options) {\n    inputField = /*#__PURE__*/_jsxDEV(\"select\", {\n      id: name,\n      name: name,\n      required: required,\n      className: 'form-select',\n      onChange: onChange,\n      onBlur: onBlur,\n      ref: reference,\n      value: value,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: '',\n        children: value === '' ? 'Válassz' : {\n          value\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  } else if (type === 'select' && employeeOptions) {\n    inputField = /*#__PURE__*/_jsxDEV(\"select\", {\n      id: name,\n      name: name,\n      required: required,\n      className: 'form-select',\n      onChange: onChange,\n      onBlur: onBlur,\n      ref: reference,\n      value: value,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: '',\n        children: \"V\\xE1lassz!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), employeeOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.employeeId,\n        children: [option.familyName, \" \", option.givenName]\n      }, option.familyName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  } else if (type === 'select' && departmentOptions) {\n    inputField = /*#__PURE__*/_jsxDEV(\"select\", {\n      id: name,\n      name: name,\n      required: required,\n      className: 'form-select',\n      onChange: onChange,\n      onBlur: onBlur,\n      ref: reference,\n      value: value,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: '',\n        children: \"V\\xE1lassz!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), departmentOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.departmentId,\n        children: option.departmentName\n      }, option.departmentName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  } else if (type === 'textarea') {\n    inputField = /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"form-control\",\n      id: name,\n      name: name,\n      onChange: onChange,\n      onBlur: onBlur,\n      required: required,\n      ref: reference,\n      rows: \"3\",\n      value: formData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  } else {\n    inputField = /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      placeholder: placeholder,\n      className: \"form-control\",\n      id: name,\n      name: name,\n      value: value,\n      onChange: onChange,\n      onBlur: onBlur,\n      required: required,\n      ref: reference\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mb-3 ${error !== '' ? 'was-validated' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      className: \"form-label\",\n      children: labelText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), inputField, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-feedback\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_c = InputFieldSet;\nexport default InputFieldSet;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputFieldSet\");","map":{"version":3,"sources":["/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/common/InputFieldSet/InputFieldSet.js"],"names":["InputFieldSet","name","type","value","placeholder","error","formData","onChange","onBlur","labelText","required","reference","employeeOptions","departmentOptions","options","inputField","map","option","employeeId","familyName","givenName","departmentId","departmentName"],"mappings":"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","sourcesContent":["const InputFieldSet = ({\n  name,\n  type,\n  value,\n  placeholder,\n  error,\n  formData,\n  onChange,\n  onBlur,\n  labelText,\n  required,\n  reference,\n  employeeOptions,\n  departmentOptions,\n  options,\n}) => {\n  let inputField;\n  if (type === 'select' && options) {\n    inputField = (\n      <select\n        id={name}\n        name={name}\n        required={required}\n        className={'form-select'}\n        onChange={onChange}\n        onBlur={onBlur}\n        ref={reference}\n        value={value}\n      >\n        <option value={''}>{value === '' ? 'Válassz' : { value }}</option>\n        {options.map(option => (\n          <option value={option} key={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    );\n  } else if (type === 'select' && employeeOptions) {\n    inputField = (\n      <select\n        id={name}\n        name={name}\n        required={required}\n        className={'form-select'}\n        onChange={onChange}\n        onBlur={onBlur}\n        ref={reference}\n        value={value}\n      >\n        <option value={''}>Válassz!</option>\n        {employeeOptions.map(option => (\n          <option value={option.employeeId} key={option.familyName}>\n            {option.familyName} {option.givenName}\n          </option>\n        ))}\n      </select>\n    );\n  } else if (type === 'select' && departmentOptions) {\n    inputField = (\n      <select\n        id={name}\n        name={name}\n        required={required}\n        className={'form-select'}\n        onChange={onChange}\n        onBlur={onBlur}\n        ref={reference}\n        value={value}\n      >\n        <option value={''}>Válassz!</option>\n        {departmentOptions.map(option => (\n          <option value={option.departmentId} key={option.departmentName}>\n            {option.departmentName}\n          </option>\n        ))}\n      </select>\n    );\n  } else if (type === 'textarea') {\n    inputField = (\n      <textarea\n        className='form-control'\n        id={name}\n        name={name}\n        onChange={onChange}\n        onBlur={onBlur}\n        required={required}\n        ref={reference}\n        rows='3'\n        value={formData}\n      />\n    );\n  } else {\n    inputField = (\n      <input\n        type={type}\n        placeholder={placeholder}\n        className='form-control'\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        required={required}\n        ref={reference}\n      />\n    );\n  }\n\n  return (\n    <div className={`mb-3 ${error !== '' ? 'was-validated' : ''}`}>\n      <label htmlFor={name} className='form-label'>\n        {labelText}\n      </label>\n      {inputField}\n      <div className='invalid-feedback'>{error}</div>\n    </div>\n  );\n};\n\nexport default InputFieldSet;\n"]},"metadata":{},"sourceType":"module"}