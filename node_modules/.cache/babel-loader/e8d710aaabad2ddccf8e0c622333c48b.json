{"ast":null,"code":"var _jsxFileName = \"/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/common/DepartmentForm/DepartmentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport InputFieldSet from '../InputFieldSet/InputFieldSet';\nimport { isFieldEmpty, isIdFormatValid } from '../../../utils/validators';\nimport { isFormValid, handleInputChange, handleInputBlur } from '../../../utils/form-validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DepartmentForm = ({\n  type,\n  departments\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState(type === 'edit' ? employee : {\n    departmentId: '',\n    departmentName: ''\n  });\n  const [alert, setAlert] = useState(null);\n  const [formWasValidated, setFormWasValidated] = useState(false);\n  const references = {\n    departmentId: useRef(),\n    departmentName: useRef()\n  };\n  const formErrorTypes = Object.freeze({\n    required: `A mező kitöltése kötelező`,\n    departmentIdFormat: `Az azonosító nem megfelelő formátumú (2 kis - vagy nagybetű és 4 szám)`\n  });\n  const [formErrors, setFormErrors] = useState({\n    departmentId: '',\n    departmentName: ''\n  });\n  const messageTypes = Object.freeze({\n    success: `Az adatok sikeresen mentésre kerültek`,\n    fail: `Az adatok mentése sikertelen`\n  });\n  const validators = {\n    departmentId: {\n      required: isFieldEmpty,\n      departmentIdFormat: isIdFormatValid\n    },\n    departmentName: {\n      required: isFieldEmpty\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setAlert('');\n    setFormErrors({\n      departmentId: '',\n      departmentName: ''\n    });\n    setFormWasValidated(false);\n    const isValid = isFormValid(formData, setFormErrors, validators, references, formErrorTypes);\n\n    if (isValid) {\n      if (type === 'new') {\n        //   setEmployees(prev => prev.concat(formData));\n        //   console.log('employees', employees);\n        setFormData('');\n        setAlert(messageTypes.success);\n      }\n\n      if (type === 'edit') {\n        console.log(formData);\n        console.log('data valid');\n        setAlert(messageTypes.success);\n      }\n    } else {\n      setFormWasValidated(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-sm mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: handleSubmit // className={`needs-validation ${formWasValidated && 'was-validated'}`}\n      ,\n      className: `needs-validation ${formWasValidated ? 'was-validated' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(InputFieldSet, {\n        name: \"departmentId\",\n        value: formData.departmentId,\n        labelText: \"Azonos\\xEDt\\xF3 *\",\n        type: \"text\",\n        placeholder: \"pl: ab1234\",\n        onChange: e => {\n          handleInputChange(e, formData, setFormData);\n        },\n        onBlur: e => {\n          handleInputBlur(e, formData, setFormErrors, validators, references, formErrorTypes);\n        },\n        reference: references.departmentId,\n        error: formErrors.departmentId,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputFieldSet, {\n        name: \"departmentName\",\n        value: formData.departmentName,\n        labelText: \"N\\xE9v *\",\n        type: \"text\",\n        onChange: e => {\n          handleInputChange(e, formData, setFormData);\n        },\n        onBlur: e => {\n          handleInputBlur(e, formData, setFormErrors, validators, references, formErrorTypes);\n        },\n        reference: references.departmentName,\n        error: formErrors.departmentName,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-l\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-warning mt-5\",\n          children: \"Ment\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(NavLink, {\n          exact: true,\n          to: \"/employees\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-dark mt-5\",\n            children: \"M\\xE9gsem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert-cont\",\n      children: alert && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `alert alert-${alert.alertType}`,\n        children: alert.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DepartmentForm, \"mwH6diEHwmMZX1qg5fN2tWx9lSY=\");\n\n_c = DepartmentForm;\nexport default DepartmentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DepartmentForm\");","map":{"version":3,"sources":["/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/common/DepartmentForm/DepartmentForm.js"],"names":["React","useState","useRef","useEffect","NavLink","InputFieldSet","isFieldEmpty","isIdFormatValid","isFormValid","handleInputChange","handleInputBlur","DepartmentForm","type","departments","formData","setFormData","employee","departmentId","departmentName","alert","setAlert","formWasValidated","setFormWasValidated","references","formErrorTypes","Object","freeze","required","departmentIdFormat","formErrors","setFormErrors","messageTypes","success","fail","validators","handleSubmit","e","preventDefault","isValid","console","log","alertType","message"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport InputFieldSet from '../InputFieldSet/InputFieldSet';\nimport { isFieldEmpty, isIdFormatValid } from '../../../utils/validators';\nimport {\n  isFormValid,\n  handleInputChange,\n  handleInputBlur,\n} from '../../../utils/form-validation';\n\nconst DepartmentForm = ({\n  type,\n  departments,\n}) => {\n  const [formData, setFormData] = useState(\n    type === 'edit'\n      ? employee\n      : {\n          departmentId: '',\n          departmentName: '',\n        }\n  );\n\n  const [alert, setAlert] = useState(null);\n  const [formWasValidated, setFormWasValidated] = useState(false);\n\n  const references = {\n    departmentId: useRef(),\n    departmentName: useRef(),\n  };\n\n  const formErrorTypes = Object.freeze({\n    required: `A mező kitöltése kötelező`,\n    departmentIdFormat: `Az azonosító nem megfelelő formátumú (2 kis - vagy nagybetű és 4 szám)`,\n  });\n\n  const [formErrors, setFormErrors] = useState({\n    departmentId: '',\n    departmentName: '',\n  });\n\n  const messageTypes = Object.freeze({\n    success: `Az adatok sikeresen mentésre kerültek`,\n    fail: `Az adatok mentése sikertelen`,\n  });\n\n  const validators = {\n    departmentId: {\n      required: isFieldEmpty,\n      departmentIdFormat: isIdFormatValid,\n    },\n    departmentName: {\n      required: isFieldEmpty,\n    },\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setAlert('');\n    setFormErrors({\n      departmentId: '',\n      departmentName: '',\n    });\n    setFormWasValidated(false);\n    const isValid = isFormValid(\n      formData,\n      setFormErrors,\n      validators,\n      references,\n      formErrorTypes\n    );\n\n    if (isValid) {\n      if (type === 'new') {\n      //   setEmployees(prev => prev.concat(formData));\n      //   console.log('employees', employees);\n\n        setFormData('');\n        setAlert(messageTypes.success);\n      }\n      if (type === 'edit') {\n        console.log(formData);\n        console.log('data valid');\n\n        setAlert(messageTypes.success);\n      }\n    } else {\n      setFormWasValidated(true);\n    }\n  };\n  return (\n    <div className='container-sm mt-5'>\n      <form\n        noValidate\n        onSubmit={handleSubmit}\n        // className={`needs-validation ${formWasValidated && 'was-validated'}`}\n        className={`needs-validation ${\n          formWasValidated ? 'was-validated' : ''\n        }`}\n      >\n        <InputFieldSet\n          name='departmentId'\n          value={formData.departmentId}\n          labelText='Azonosító *'\n          type='text'\n          placeholder='pl: ab1234'\n          onChange={e => {\n            handleInputChange(e, formData, setFormData);\n          }}\n          onBlur={e => {\n            handleInputBlur(\n              e,\n              formData,\n              setFormErrors,\n              validators,\n              references,\n              formErrorTypes\n            );\n          }}\n          reference={references.departmentId}\n          error={formErrors.departmentId}\n          required\n        />\n        <InputFieldSet\n          name='departmentName'\n          value={formData.departmentName}\n          labelText='Név *'\n          type='text'\n          onChange={e => {\n            handleInputChange(e, formData, setFormData);\n          }}\n          onBlur={e => {\n            handleInputBlur(\n              e,\n              formData,\n              setFormErrors,\n              validators,\n              references,\n              formErrorTypes\n            );\n          }}\n          reference={references.departmentName}\n          error={formErrors.departmentName}\n          required\n        />\n        <div className='container-l'>\n          <button type='submit' className='btn btn-warning mt-5'>\n            Mentés\n          </button>{' '}\n          <NavLink exact to='/employees'>\n            <button type='button' className='btn btn-dark mt-5'>\n              Mégsem\n            </button>{' '}\n          </NavLink>\n        </div>\n      </form>\n      <div className='alert-cont'>\n        {alert && (\n          <p className={`alert alert-${alert.alertType}`}>{alert.message}</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DepartmentForm;\n"]},"metadata":{},"sourceType":"module"}