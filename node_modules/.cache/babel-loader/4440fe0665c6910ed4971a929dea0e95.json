{"ast":null,"code":"var _jsxFileName = \"/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/common/InputFieldSet/InputFieldSet.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputFieldSet = ({\n  error,\n  formData,\n  handleInputChange,\n  handleInputBlur,\n  type,\n  name,\n  labelText,\n  required,\n  reference,\n  options\n}) => {\n  let inputField;\n\n  if (type === 'select') {\n    inputField = /*#__PURE__*/_jsxDEV(\"select\", {\n      id: name,\n      name: name,\n      required: required,\n      className: 'form-select',\n      onChange: handleInputChange,\n      onBlur: handleInputBlur,\n      ref: reference,\n      value: formData,\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.value,\n        children: option.text ? option.text : option.value\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  } else if (type === 'textarea') {\n    inputField = /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"form-control\",\n      id: name,\n      name: name,\n      onChange: handleInputChange,\n      onBlur: handleInputBlur,\n      required: required,\n      ref: reference,\n      rows: \"3\",\n      value: formData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  } else {\n    inputField = /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      className: \"form-control\",\n      id: name,\n      name: name,\n      value: formData,\n      onChange: handleInputChange,\n      onBlur: handleInputBlur,\n      required: required,\n      ref: reference\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mb-3 ${error[name] !== '' ? 'was-validated' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      className: \"form-label\",\n      children: labelText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), inputField, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-feedback\",\n      children: error[name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_c = InputFieldSet;\nexport default InputFieldSet;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputFieldSet\");","map":{"version":3,"sources":["/Users/tiborzavadovics/Programming/Interviews/employee-management-app/src/components/common/InputFieldSet/InputFieldSet.js"],"names":["InputFieldSet","error","formData","handleInputChange","handleInputBlur","type","name","labelText","required","reference","options","inputField","map","option","value","text"],"mappings":";;;AAAA,MAAMA,aAAa,GAAG,CAAC;AACrBC,EAAAA,KADqB;AAErBC,EAAAA,QAFqB;AAGrBC,EAAAA,iBAHqB;AAIrBC,EAAAA,eAJqB;AAKrBC,EAAAA,IALqB;AAMrBC,EAAAA,IANqB;AAOrBC,EAAAA,SAPqB;AAQrBC,EAAAA,QARqB;AASrBC,EAAAA,SATqB;AAUrBC,EAAAA;AAVqB,CAAD,KAWhB;AACJ,MAAIC,UAAJ;;AACA,MAAIN,IAAI,KAAK,QAAb,EAAuB;AACrBM,IAAAA,UAAU,gBACR;AACE,MAAA,EAAE,EAAEL,IADN;AAEE,MAAA,IAAI,EAAEA,IAFR;AAGE,MAAA,QAAQ,EAAEE,QAHZ;AAIE,MAAA,SAAS,EAAE,aAJb;AAKE,MAAA,QAAQ,EAAEL,iBALZ;AAME,MAAA,MAAM,EAAEC,eANV;AAOE,MAAA,GAAG,EAAEK,SAPP;AAQE,MAAA,KAAK,EAAEP,QART;AAAA,gBAUGQ,OAAO,CAACE,GAAR,CAAYC,MAAM,iBACjB;AAAQ,QAAA,KAAK,EAAEA,MAAM,CAACC,KAAtB;AAAA,kBACGD,MAAM,CAACE,IAAP,GAAcF,MAAM,CAACE,IAArB,GAA4BF,MAAM,CAACC;AADtC,SAAkCD,MAAM,CAACC,KAAzC;AAAA;AAAA;AAAA;AAAA,cADD;AAVH;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD,GAnBD,MAmBO,IAAIT,IAAI,KAAK,UAAb,EAAyB;AAC9BM,IAAAA,UAAU,gBACR;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,EAAE,EAAEL,IAFN;AAGE,MAAA,IAAI,EAAEA,IAHR;AAIE,MAAA,QAAQ,EAAEH,iBAJZ;AAKE,MAAA,MAAM,EAAEC,eALV;AAME,MAAA,QAAQ,EAAEI,QANZ;AAOE,MAAA,GAAG,EAAEC,SAPP;AAQE,MAAA,IAAI,EAAC,GARP;AASE,MAAA,KAAK,EAAEP;AATT;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GAdM,MAcA;AACLS,IAAAA,UAAU,gBACR;AACE,MAAA,IAAI,EAAEN,IADR;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,EAAE,EAAEC,IAHN;AAIE,MAAA,IAAI,EAAEA,IAJR;AAKE,MAAA,KAAK,EAAEJ,QALT;AAME,MAAA,QAAQ,EAAEC,iBANZ;AAOE,MAAA,MAAM,EAAEC,eAPV;AAQE,MAAA,QAAQ,EAAEI,QARZ;AASE,MAAA,GAAG,EAAEC;AATP;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAG,QAAOR,KAAK,CAACK,IAAD,CAAL,KAAgB,EAAhB,GAAqB,eAArB,GAAuC,EAAG,EAAlE;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEA,IAAhB;AAAsB,MAAA,SAAS,EAAC,YAAhC;AAAA,gBACGC;AADH;AAAA;AAAA;AAAA;AAAA,YADF,EAIGI,UAJH,eAKE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBAAmCV,KAAK,CAACK,IAAD;AAAxC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAvED;;KAAMN,a;AAyEN,eAAeA,aAAf","sourcesContent":["const InputFieldSet = ({\n  error,\n  formData,\n  handleInputChange,\n  handleInputBlur,\n  type,\n  name,\n  labelText,\n  required,\n  reference,\n  options,\n}) => {\n  let inputField;\n  if (type === 'select') {\n    inputField = (\n      <select\n        id={name}\n        name={name}\n        required={required}\n        className={'form-select'}\n        onChange={handleInputChange}\n        onBlur={handleInputBlur}\n        ref={reference}\n        value={formData}\n      >\n        {options.map(option => (\n          <option value={option.value} key={option.value}>\n            {option.text ? option.text : option.value}\n          </option>\n        ))}\n      </select>\n    );\n  } else if (type === 'textarea') {\n    inputField = (\n      <textarea\n        className='form-control'\n        id={name}\n        name={name}\n        onChange={handleInputChange}\n        onBlur={handleInputBlur}\n        required={required}\n        ref={reference}\n        rows='3'\n        value={formData}\n      />\n    );\n  } else {\n    inputField = (\n      <input\n        type={type}\n        className='form-control'\n        id={name}\n        name={name}\n        value={formData}\n        onChange={handleInputChange}\n        onBlur={handleInputBlur}\n        required={required}\n        ref={reference}\n      />\n    );\n  }\n\n  return (\n    <div className={`mb-3 ${error[name] !== '' ? 'was-validated' : ''}`}>\n      <label htmlFor={name} className='form-label'>\n        {labelText}\n      </label>\n      {inputField}\n      <div className='invalid-feedback'>{error[name]}</div>\n    </div>\n  );\n};\n\nexport default InputFieldSet;\n"]},"metadata":{},"sourceType":"module"}